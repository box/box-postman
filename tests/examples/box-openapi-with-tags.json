
{
  "openapi": "3.0.2",
  "info": {
    "title": "Box Platform 2.0 APIs",
    "description": "The Box Content API gives you access to secure content management and content experience features for use in your own app. It strives to be RESTful and is organized around the main resources youâ€™re familiar with from the Box web interface.",
    "termsOfService": "https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9",
    "contact": {
      "name": "Box Developer Relations",
      "url": "https://developer.box.com",
      "email": "devrel@box.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api.box.com/2.0",
      "description": "Box Platform API server"
    }
  ],
  "paths": {
    "/files/{file_id}": {
      "get": {
        "operationId": "get_files_id",
        "summary": "Get a file",
        "tags": [
          "Files"
        ],
        "x-box-tag": "files",
        "x-box-enable-explorer": true,
        "description": "Retrieves the details about a file.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response, unless explicitly specified.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file object.\n\n[Some fields are optional](#file) and need to be explicitly\nrequested using the [fields](#get-files-id--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_files_id",
        "summary": "Restore file",
        "tags": [
          "Trash",
          "Files"
        ],
        "x-box-tag": "trashed_files",
        "description": "Restores an file that has been moved to the trash.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response, unless explicitly specified.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "description": "An optional new name for the file.",
                    "example": "Restored.docx",
                    "type": "string"
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The optional parent folder that the item will\nbe restored to.\n\nUse this if the original parent folder no longer\nexists, or the user no longer has access to the\noriginal parent folder."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a file object when the file has been restored.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error if the user does not have access to the folder\nthe file is being restored to, or the user does not have permission\nto restore files from the trash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the file is not in the trash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "409": {
            "description": "Returns an error if there is an file with the same name\nin the folder the file is being restored to.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put_files_id",
        "summary": "Update a file",
        "tags": [
          "Files"
        ],
        "x-box-tag": "files",
        "x-box-enable-explorer": true,
        "description": "Updates a file. This can be used to rename or move a file,\ncreate a shared link, or lock a file.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response, unless explicitly specified.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name for the file",
                    "example": "NewFile.txt"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description for a file",
                    "maxLength": 256,
                    "example": "Amazing Photo"
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Parent"
                      },
                      {
                        "description": "The parent folder for this file. Use this to move the file\nor to restore it out of the trash."
                      }
                    ]
                  },
                  "shared_link": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/SharedLink--Writable"
                      },
                      {
                        "description": "Enables the creation of a shared link for this file"
                      }
                    ]
                  },
                  "lock": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Lock--Writable"
                      },
                      {
                        "description": "Creates a lock on a file. Set to `null` to unlock a file"
                      }
                    ]
                  },
                  "permissions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Permissions--Writable"
                      },
                      {
                        "description": "Describes if a file can be downloaded and by who."
                      }
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "example": [
                      "approved"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "description": "The tags for this item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a file object.\n\n[Some fields are optional](#file) and need to be explicitly\nrequested using the [fields](#get-files-id--request--fields)\nparameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_files_id",
        "summary": "Delete a file",
        "tags": [
          "Files"
        ],
        "x-box-tag": "files",
        "description": "Deletes a file, either permanently or by moving it to\nthe trash.\n\nThe the enterprise settings determine whether the item will\nbe permanently deleted from Box or moved to the trash.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file has been successfully\ndeleted."
          },
          "412": {
            "description": "If the `If-Match` header was sent and the file has since changed, the\nAPI will return a `412 Precondition Failed` error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        }
      }
    },
    "/files/{file_id}/content": {
      "get": {
        "operationId": "get_files_id_content",
        "summary": "Download a file",
        "tags": [
          "Files"
        ],
        "x-box-tag": "downloads",
        "description": "Returns the contents of a file in binary format.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Range",
            "description": "The byte range of the content to download.\n\nThe format `{start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
            "example": "0-1024",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BoxApi",
            "description": "The URL and password for a file that has\nbeen shared using a shared link, as this file would otherwise\nnot be accessible to the user.\n\nUse the format `shared_link=SHARED_LINK_URL` or if a password was set\nuse `shared_link=[link]&shared_link_password=[password]`",
            "example": "shared_link=[link]",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "description": "The file version to download",
            "example": 4,
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "If the file is not ready to be downloaded yet `Retry-After` header will\nbe returned indicating the time in seconds after which the file will\nbe available for the client to download.\n\nThis response can occur when the file was uploaded immediately before the\ndownload request.",
            "headers": {
              "Retry-After": {
                "description": "The time in seconds after which to retry the download",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "302": {
            "description": "If the file is available to be downloaded the response will include a\n`Location` header for the file on `dl.boxcloud.com`.\n\nThe `dl.boxcloud.com` URL is not persistent and clients will need\nto follow the redirect in order to actually download the file.",
            "headers": {
              "Location": {
                "description": "A pointer to the download URL",
                "schema": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_files_id_content",
        "tags": [
          "File Uploads"
        ],
        "x-box-tag": "uploads",
        "summary": "Upload a file version",
        "description": "Update a file's content. For file sizes over 50MB we recommend\nusing the Chunk Upload APIs.",
        "servers": [
          {
            "url": "https://upload.box.com/api/2.0",
            "description": "Server for file uploads"
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "description": "The ID of the file.",
            "example": "12345",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure this item hasn't recently changed\nby ensuring the item's current `etag` matches the\n`etag` passed into this header.",
            "in": "header",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response, unless explicitly specified.",
            "in": "query",
            "example": "id,type,name",
            "required": false,
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Content-MD5",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
            "in": "header",
            "description": "An optional header containing the SHA-1 hash of the file to\nensure that the file was not corrupted in transit."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "attributes",
                  "files"
                ],
                "properties": {
                  "attributes": {
                    "description": "The JSON attributes of this request.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "An optional new name for the file. If specified, the file\nwill be renamed when the new version is uploaded.",
                        "example": "Photo 2.0.png"
                      },
                      "content_modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2012-12-12T10:53:43-08:00",
                        "description": "Defines the time the file was last modified at.\n\nIf not set, the upload time will be used."
                      }
                    }
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The content of the file to upload to Box."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the new file object in a list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Files"
                }
              }
            }
          }
        }
      }
    },
    "/authorize": {
      "get": {
        "operationId": "get_authorize",
        "summary": "Authorize a user",
        "description": "Authorize a user by sending them through the [Box](https://box.com)\nwebsite and request their permission to act on their behalf.\n\nThis is the first step when authenticating a user using\nOAuth 2.0. To request a user's authorization to use the Box APIs\non their behalf you will need to send a user to the URL with this\nformat.",
        "tags": [
          "Authorization"
        ],
        "x-box-tag": "authorization",
        "security": [],
        "servers": [
          {
            "url": "https://account.box.com/api/oauth2",
            "description": "Server for client-side authentication"
          }
        ],
        "parameters": [
          {
            "name": "response_type",
            "description": "The type of response we'd like to receive.",
            "in": "query",
            "example": "5idyGSFuf54zrvKm",
            "required": true,
            "schema": {
              "type": "string",
              "format": "token",
              "enum": [
                "code"
              ]
            }
          },
          {
            "name": "client_id",
            "description": "The Client ID of the application that is requesting to authenticate\nthe user. To get the Client ID for your application, log in to your\nBox developer console and click the **Edit Application** link for\nthe application you're working with. In the OAuth2 Parameters section\nof the configuration page, find the item labeled **client_id**. The\ntext of that item is your application's Client ID.",
            "in": "query",
            "example": "ly1nj6n11vionaie65emwzk575hnnmrk",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "description": "The URL to which Box redirects the browser after the user has granted\nor rejected the application permission. This URL must match the\nredirect URL in the configuration of your application. It must be a\nvalid HTTPS URL and it needs to be able to handle the redirection to\ncomplete the next step in the OAuth2 flow.",
            "in": "query",
            "example": "http://example.com/auth/callback",
            "required": true,
            "schema": {
              "type": "string",
              "format": "url"
            }
          },
          {
            "name": "state",
            "description": "A custom string of your choice. Box will pass the same string to\nthe redirect URL when authentication is complete. This parameter\ncan be used to identify a user on redirect, as well as protect\nagainst hijacked sessions and other attacks.",
            "in": "query",
            "example": "my_state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "description": "A comma-separated list of application scopes you'd like to\nauthenticate the user for. This defaults to all the scopes configured\nfor the application in its configuration page.",
            "in": "query",
            "example": "admin_readwrite",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Does not return any data, but rather should be used in the browser.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "html"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "operationId": "post_oauth2_token",
        "summary": "Request an access token",
        "description": "Request an Access Token using either a client-side obtained OAuth2\nauthorization code or a server-side JWT assertion.\n\nAn Access Token is a string that enables Box to verify that a\nrequest belongs to an authorized session. In the normal order of\noperations you will begin by requesting authentication from the\n[authorize](#get-authorize) endpoint and Box will send you an\nauthorization code.\n\nYou will then send this code to this endpoint to exchange it for\nan Access Token. The returned Access Token can then be used to to make\nBox API calls.",
        "tags": [
          "Authorization"
        ],
        "servers": [
          {
            "url": "https://api.box.com",
            "description": "Server for server-side authentication"
          }
        ],
        "x-box-tag": "authorization",
        "security": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "400": {
            "description": "An authentication error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2Error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/revoke": {
      "post": {
        "operationId": "post_oauth2_revoke",
        "summary": "Revoke an access token",
        "description": "Revoke an active Access Token, effectively logging a user out\nthat has been previously authenticated.",
        "tags": [
          "Authorization"
        ],
        "servers": [
          {
            "url": "https://api.box.com",
            "description": "Server for server-side authentication"
          }
        ],
        "x-box-tag": "authorization",
        "security": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRevocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an empty response when the token was successfully revoked."
          },
          "400": {
            "description": "An authentication error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2Security": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
            "tokenUrl": "https://api.box.com/oauth2/token",
            "scopes": {
              "root_readonly": "Read all files and folders stored in Box",
              "root_readwrite": "Read and write all files and folders stored in Box",
              "manage_app_users": "Provision and manage app users",
              "manage_managed_users": "Provision and manage managed users",
              "manage_groups": "Manage an enterprise's groups",
              "manage_webhook": "Create webhooks programmatically through the API",
              "manage_enterprise_properties": "Manage enterprise properties",
              "manage_data_retention": "Manage data retention polices",
              "manage_legal_hold": "Manage Legal Holds"
            }
          }
        }
      }
    },
    "schemas": {
      "AccessToken": {
        "title": "Access Token",
        "x-box-resource-id": "access_token",
        "description": "A token that can be used to make authenticated API calls.",
        "x-box-tag": "authorization",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccessToken--Mini"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "refresh_token": {
                "type": "string",
                "format": "token",
                "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
                "description": "The refresh token for this access token, which can be used\nto request a new access token when the current one expires."
              },
              "issued_token_type": {
                "type": "string",
                "format": "urn",
                "example": "urn:ietf:params:oauth:token-type:access_token",
                "enum": [
                  "urn:ietf:params:oauth:token-type:access_token"
                ],
                "description": "The type of downscoped access token returned. This is only\nreturned if an access token has been downscoped."
              }
            }
          }
        ]
      },
      "AccessToken--Mini": {
        "title": "Access Token Mini",
        "x-box-resource-id": "access_token--mini",
        "description": "The basics of an access token",
        "x-box-reference-hide": true,
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "format": "token",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ",
            "description": "The requested access token."
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 3600,
            "description": "The time in seconds in seconds by which this token will expire."
          },
          "token_type": {
            "type": "string",
            "enum": [
              "bearer"
            ],
            "example": "bearer",
            "description": "The type of access token returned."
          },
          "restricted_to": {
            "type": "array",
            "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
            "items": {
              "$ref": "#/components/schemas/FileScope"
            }
          }
        }
      },
      "AssignmentCounts": {
        "title": "Assignment Counts",
        "x-box-resource-id": "assignment_counts",
        "description": "Counts of assignments within this a legal hold policy by item type",
        "properties": {
          "user": {
            "type": "integer",
            "format": "int64",
            "description": "The number of users this policy is applied to",
            "example": 1
          },
          "folder": {
            "type": "integer",
            "format": "int64",
            "description": "The number of folders this policy is applied to",
            "example": 2
          },
          "file": {
            "type": "integer",
            "format": "int64",
            "description": "The number of files this policy is applied to",
            "example": 3
          },
          "file_version": {
            "type": "integer",
            "format": "int64",
            "description": "The number of file versions this policy is applied to",
            "example": 4
          }
        }
      },
      "ClientError": {
        "title": "Client Error",
        "x-box-resource-id": "client_error",
        "description": "A generic error",
        "properties": {
          "type": {
            "description": "`error`",
            "example": "error",
            "type": "string",
            "enum": [
              "error"
            ],
            "nullable": false
          },
          "status": {
            "description": "The HTTP status of the response.",
            "example": 400,
            "type": "integer",
            "format": "int32",
            "nullable": false
          },
          "code": {
            "description": "A Box-specific error code",
            "example": "item_name_invalid",
            "type": "string",
            "enum": [
              "created",
              "accepted",
              "no_content",
              "redirect",
              "not_modified",
              "bad_request",
              "unauthorized",
              "forbidden",
              "not_found",
              "method_not_allowed",
              "conflict",
              "precondition_failed",
              "too_many_requests",
              "internal_server_error",
              "unavailable"
            ]
          },
          "help_url": {
            "description": "A URL that links to more information about why this error occurred.",
            "example": "http://developers.box.com/docs/#errors",
            "type": "string",
            "nullable": false
          },
          "message": {
            "description": "A short message describing the error.",
            "example": "Method Not Allowed",
            "type": "string",
            "nullable": false
          },
          "request_id": {
            "description": "A unique identifier for this response, which can be used\nwhen contacting Box support.",
            "type": "string",
            "example": "abcdef123456",
            "nullable": false
          }
        }
      },
      "Collaboration": {
        "title": "Collaboration",
        "x-box-resource-id": "collaboration",
        "description": "Collaborations define access permissions for users and groups to files and\nfolders, similar to access control lists. A collaboration object grants a\nuser or group access to a file or folder with permissions defined by a\nspecific role.",
        "x-box-tag": "user_collaborations",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`collaboration`",
                "example": "collaboration",
                "enum": [
                  "collaboration"
                ]
              },
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "description": "The file or folder to which access is granted. The field is\n`null` when the collaboration `status` is `pending`."
                  }
                ],
                "nullable": true
              },
              "accessible_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user or group that is granted access"
                  }
                ]
              },
              "invite_email": {
                "type": "string",
                "nullable": true,
                "example": "john@example.com",
                "description": "The email address used to invite an unregistered collaborator, if\nthey are not a registered user."
              },
              "role": {
                "type": "string",
                "example": "editor",
                "enum": [
                  "editor",
                  "viewer",
                  "previewer",
                  "uploader",
                  "previewer uploader",
                  "viewer uploader",
                  "co-owner",
                  "owner"
                ],
                "description": "The level of access granted."
              },
              "expires_at": {
                "type": "string",
                "nullable": true,
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the collaboration will expire, or `null` if no expiration\ndate is set."
              },
              "can_view_path": {
                "type": "boolean",
                "example": true,
                "description": "Whether the \"view path collaboration\" feature is enabled or not. View\npath collaborations allow the invitee to see the entire parent path to\nthe item. View path collaboration does not grant privileges in any\nparent folder (e.g. cannot see content the user is not collaborated\non), other than the permission to view the parent path."
              },
              "status": {
                "type": "string",
                "example": "accepted",
                "enum": [
                  "accepted",
                  "pending",
                  "rejected"
                ],
                "description": "The status of the collaboration invitation."
              },
              "acknowledged_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the `status` of the collaboration object changed to\n`accepted` or `rejected`"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the collaboration object"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the collaboration object was created"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "When the collaboration object was last modified"
              },
              "acceptance_requirements_status": {
                "type": "object",
                "properties": {
                  "terms_of_service_requirement": {
                    "type": "object",
                    "properties": {
                      "is_accepted": {
                        "type": "boolean",
                        "nullable": true,
                        "example": true,
                        "description": "Whether or not the terms of service have been accepted.  The\nfield is `null` when there is no terms of service required."
                      },
                      "terms_of_service": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/TermsOfService--Mini"
                          },
                          {
                            "description": "The terms of service that must be accepted before the\ncollaboration can be accepted. The field is `null` when\nthere is no terms of service required."
                          }
                        ]
                      }
                    }
                  },
                  "strong_password_requirement": {
                    "type": "object",
                    "properties": {
                      "enterprise_has_strong_password_required_for_external_users": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether or not the enterprise that owns the content requires\na strong password to collaborate on the content."
                      },
                      "user_has_strong_password": {
                        "type": "boolean",
                        "nullable": true,
                        "example": true,
                        "description": "Whether or not the user has a strong password set for their\naccount. The field is `null` when a strong password is not\nrequired."
                      }
                    }
                  },
                  "two_factor_authentication_requirement": {
                    "type": "object",
                    "properties": {
                      "enterprise_has_two_factor_auth_enabled": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether or not the enterprise that owns the content requires\ntwo-factor authentication to be enabled in order to\ncollaborate on the content."
                      },
                      "user_has_two_factor_authentication_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "example": true,
                        "description": "Whether or not the user has two-factor authentication\nenabled. The field is `null` when two-factor\nauthentication is not required."
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Collaborations": {
        "title": "Collaborations",
        "x-box-resource-id": "collaborations",
        "x-box-tag": "user_collaborations",
        "description": "A list of collaborations",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Collaboration"
                }
              }
            }
          }
        ]
      },
      "CollaborationWhitelistEntry": {
        "title": "Collaboration Whitelist Entry",
        "x-box-resource-id": "collaboration_whitelist_entry",
        "x-box-tag": "collaboration_whitelist_entries",
        "description": "A Collaboration Whitelist entry describes an\napproved domains that can collaborate with your enterprise",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`collaboration_whitelist_entry`",
                "example": "collaboration_whitelist_entry",
                "enum": [
                  "collaboration_whitelist_entry"
                ]
              },
              "domain": {
                "type": "string",
                "example": "example.com",
                "description": "The whitelisted domain"
              },
              "direction": {
                "type": "string",
                "example": "both",
                "description": "The direction of the collaborations to whitelist",
                "enum": [
                  "inbound",
                  "outbound",
                  "both"
                ]
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise this whitelist is applied to"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the whitelist entry was created",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "CollaborationWhitelistEntries": {
        "title": "Collaboration Whitelist Entries",
        "x-box-resource-id": "collaboration_whitelist_entries",
        "x-box-tag": "collaboration_whitelist_entries",
        "description": "A list of collaboration whitelist entries.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollaborationWhitelistEntry"
                }
              }
            }
          }
        ]
      },
      "CollaborationWhitelistExemptTarget": {
        "title": "Whitelist Exempt Target",
        "x-box-resource-id": "collaboration_whitelist_exempt_target",
        "x-box-tag": "collaboration_whitelist_exempt_targets",
        "description": "The record that represents a target user that is exempt from the\ncollaboration whitelist.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`collaboration_whitelist`",
                "example": "collaboration_whitelist",
                "enum": [
                  "collaboration_whitelist"
                ]
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise this entry belongs to"
                  }
                ]
              },
              "user": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The user that has been exempt"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the entry was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the entry was modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "CollaborationWhitelistExemptTargets": {
        "title": "Whitelist Exempt Targets",
        "x-box-resource-id": "collaboration_whitelist_exempt_targets",
        "x-box-tag": "collaboration_whitelist_exempt_targets",
        "description": "A list of collaboration whitelist exemptions.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollaborationWhitelistExemptTarget"
                }
              }
            }
          }
        ]
      },
      "Collection": {
        "title": "Collection",
        "x-box-resource-id": "collection",
        "description": "A collection of items, including files and folders.\n\nCurrently, the only collection available\nis the `favorites` collection.\n\nThe contents of a collection can be explored in a\nsimilar way to which the contents of a folder is\nexplored.",
        "x-box-tag": "collections",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`collection`",
                "example": "collection",
                "enum": [
                  "collection"
                ]
              },
              "name": {
                "type": "string",
                "description": "The name of the collection.",
                "enum": [
                  "Favorites"
                ],
                "example": "Favorites"
              },
              "collection_type": {
                "type": "string",
                "description": "The type of the collection. This is used to\ndetermine the proper visual treatment for\ncollections.",
                "enum": [
                  "favorites"
                ],
                "example": "favorites"
              }
            }
          }
        ]
      },
      "Collections": {
        "title": "Collections",
        "x-box-resource-id": "collections",
        "x-box-tag": "collections",
        "description": "A list of collections",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          }
        ]
      },
      "Comment": {
        "title": "Comment",
        "x-box-resource-id": "comment",
        "x-box-has-field-variants": true,
        "x-box-tag": "comments",
        "description": "Comments are messages created on files. Comments\ncan be made independently or created as responses to other\ncomments",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Comment--Standard"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "tagged_message": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "@[1234567:Aaron Levie] these tigers are cool!",
                "description": "The string representing the comment text with\n@mentions included. @mention format is @[id:username]\nwhere `id` is user's Box ID and `username` is\ntheir display name."
              }
            }
          }
        ]
      },
      "Comments": {
        "title": "Comments",
        "x-box-resource-id": "comments",
        "x-box-tag": "comments",
        "description": "A list of comments",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        ]
      },
      "Comment--Standard": {
        "title": "Comment (Standard)",
        "x-box-resource-id": "comment--standard",
        "description": "Standard representation of a comment, as returned by the\ncomment API endpoints and when nested within other resources.",
        "x-box-reference-hide": true,
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "x-box-field-variant": 1,
                "type": "string",
                "description": "`comment`",
                "example": "comment",
                "enum": [
                  "comment"
                ]
              },
              "is_reply_comment": {
                "x-box-field-variant": 1,
                "type": "boolean",
                "description": "Whether or not this comment is a reply to another\ncomment",
                "example": true
              },
              "message": {
                "x-box-field-variant": 1,
                "type": "string",
                "example": "@Aaron Levie these tigers are cool!",
                "description": "The text of the comment, as provided by the user"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "A mini user object representing the author of the\ncomment"
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ]
              },
              "created_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "The time this comment was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "The time this comment was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Reference"
                  },
                  {
                    "description": "The object this comment was placed on"
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ]
              }
            }
          }
        ]
      },
      "ConflictError": {
        "title": "Conflict Error",
        "x-box-resource-id": "conflict_error",
        "x-box-tag": "uploads",
        "description": "The error that occurs when a file can not be created due\nto a conflict.",
        "allOf": [
          {
            "$ref": "#/components/schemas/ClientError"
          },
          {
            "properties": {
              "context_info": {
                "type": "object",
                "properties": {
                  "conflicts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/File--Mini"
                      },
                      {
                        "properties": {
                          "sha1": {
                            "type": "string",
                            "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                            "description": "The SHA1 hash of the file."
                          },
                          "file_version": {
                            "$ref": "#/components/schemas/FileVersion--Mini"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      },
      "DevicePinner": {
        "title": "Device Pinner",
        "x-box-resource-id": "device_pinner",
        "x-box-tag": "device_pins",
        "description": "Device pins allow enterprises to control what devices can\nuse native Box applications.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`device_pinner`",
                "example": "device_pinner",
                "enum": [
                  "device_pinner"
                ]
              },
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user that the device pin belongs to"
                  }
                ]
              },
              "product_name": {
                "type": "string",
                "description": "The type of device being pinned",
                "example": "iPad"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the device pin was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the device pin was modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "DevicePinners": {
        "title": "Device Pinners",
        "x-box-resource-id": "device_pinners",
        "x-box-tag": "device_pins",
        "description": "A list of device pins",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DevicePinner"
                }
              }
            }
          }
        ]
      },
      "Enterprise": {
        "title": "Enterprise",
        "x-box-resource-id": "enterprise",
        "description": "A representation of a Box enterprise",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`enterprise`",
                "example": "enterprise",
                "enum": [
                  "enterprise"
                ]
              },
              "name": {
                "description": "The name of the enterprise",
                "example": "Acme Inc.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EmailAlias": {
        "title": "Email Alias",
        "x-box-resource-id": "email_alias",
        "x-box-tag": "email_aliases",
        "description": "An email alias for a user.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`email_alias`",
                "example": "email_alias",
                "enum": [
                  "email_alias"
                ]
              },
              "email": {
                "type": "string",
                "description": "The email address",
                "example": "alias@example.com"
              },
              "is_confirmed": {
                "type": "boolean",
                "description": "Whether the email address has been confirmed",
                "example": true
              }
            }
          }
        ]
      },
      "EmailAliases": {
        "title": "Email Aliases",
        "x-box-resource-id": "email_aliases",
        "x-box-tag": "email_aliases",
        "description": "A list of email aliases",
        "properties": {
          "total_count": {
            "description": "The number of email aliases.",
            "example": 5000,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailAlias"
            }
          }
        }
      },
      "Event": {
        "title": "Event",
        "x-box-resource-id": "event",
        "x-box-tag": "events",
        "description": "The description of an event that happened within Box",
        "properties": {
          "type": {
            "description": "`event`",
            "type": "string",
            "example": "event"
          },
          "event_id": {
            "type": "string",
            "example": "f82c3ba03e41f7e8a7608363cc6c0390183c3f83",
            "description": "The ID of the event object. You can use this to detect duplicate events"
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User--Mini"
              },
              {
                "description": "The user that performed the action represented by the event.\nSome events may be performed by users not logged into Box.\nIn that case, not all attributes of the object are populated and the\nevent is attributed to a unknown user (`user_id = 2`)"
              }
            ]
          },
          "event_type": {
            "allOf": [
              {
                "title": "Event Type",
                "example": "FILE_MARKED_MALICIOUS",
                "type": "string",
                "description": "An event type that can trigger an event",
                "enum": [
                  "ACCESS_GRANTED",
                  "ACCESS_REVOKED",
                  "ADD_DEVICE_ASSOCIATION",
                  "ADD_LOGIN_ACTIVITY_DEVICE",
                  "ADMIN_LOGIN",
                  "APPLICATION_CREATED",
                  "APPLICATION_PUBLIC_KEY_ADDED",
                  "APPLICATION_PUBLIC_KEY_DELETED",
                  "CHANGE_ADMIN_ROLE",
                  "CHANGE_FOLDER_PERMISSION",
                  "COLLABORATION_ACCEPT",
                  "COLLABORATION_EXPIRATION",
                  "COLLABORATION_INVITE",
                  "COLLABORATION_REMOVE",
                  "COLLABORATION_ROLE_CHANGE",
                  "COLLAB_ADD_COLLABORATOR",
                  "COLLAB_INVITE_COLLABORATOR",
                  "COLLAB_REMOVE_COLLABORATOR",
                  "COLLAB_ROLE_CHANGE",
                  "COMMENT_CREATE",
                  "COMMENT_DELETE",
                  "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY",
                  "CONTENT_WORKFLOW_AUTOMATION_ADD",
                  "CONTENT_WORKFLOW_AUTOMATION_DELETE",
                  "CONTENT_WORKFLOW_POLICY_ADD",
                  "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION",
                  "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION",
                  "COPY",
                  "DATA_RETENTION_CREATE_RETENTION",
                  "DATA_RETENTION_REMOVE_RETENTION",
                  "DELETE",
                  "DELETE_USER",
                  "DEVICE_TRUST_CHECK_FAILED",
                  "DOWNLOAD",
                  "EDIT",
                  "EDIT_USER",
                  "EMAIL_ALIAS_CONFIRM",
                  "EMAIL_ALIAS_REMOVE",
                  "ENABLE_TWO_FACTOR_AUTH",
                  "FAILED_LOGIN",
                  "FILE_MARKED_MALICIOUS",
                  "FILE_WATERMARKED_DOWNLOAD",
                  "GROUP_ADD_ITEM",
                  "GROUP_ADD_USER",
                  "GROUP_CREATION",
                  "GROUP_DELETION",
                  "GROUP_EDITED",
                  "GROUP_REMOVE_ITEM",
                  "GROUP_REMOVE_USER",
                  "ITEM_COPY",
                  "ITEM_CREATE",
                  "ITEM_DOWNLOAD",
                  "ITEM_MAKE_CURRENT_VERSION",
                  "ITEM_MODIFY",
                  "ITEM_MOVE",
                  "ITEM_OPEN",
                  "ITEM_PREVIEW",
                  "ITEM_RENAME",
                  "ITEM_SHARED",
                  "ITEM_SHARED_CREATE",
                  "ITEM_SHARED_UNSHARE",
                  "ITEM_SHARED_UPDATE",
                  "ITEM_SYNC",
                  "ITEM_TRASH",
                  "ITEM_UNDELETE_VIA_TRASH",
                  "ITEM_UNSYNC",
                  "ITEM_UPLOAD",
                  "LEGAL_HOLD_ASSIGNMENT_CREATE",
                  "LEGAL_HOLD_ASSIGNMENT_DELETE",
                  "LEGAL_HOLD_POLICY_CREATE",
                  "LEGAL_HOLD_POLICY_DELETE",
                  "LEGAL_HOLD_POLICY_UPDATE",
                  "LOCK",
                  "LOCK_CREATE",
                  "LOCK_DESTROY",
                  "LOGIN",
                  "MASTER_INVITE_ACCEPT",
                  "MASTER_INVITE_REJECT",
                  "METADATA_INSTANCE_CREATE",
                  "METADATA_INSTANCE_DELETE",
                  "METADATA_INSTANCE_UPDATE",
                  "METADATA_TEMPLATE_CREATE",
                  "METADATA_TEMPLATE_DELETE",
                  "METADATA_TEMPLATE_UPDATE",
                  "MOVE",
                  "NEW_USER",
                  "PREVIEW",
                  "REMOVE_DEVICE_ASSOCIATION",
                  "REMOVE_LOGIN_ACTIVITY_DEVICE",
                  "RENAME",
                  "RETENTION_POLICY_ASSIGNMENT_ADD",
                  "SHARE",
                  "SHARE_EXPIRATION",
                  "STORAGE_EXPIRATION",
                  "TAG_ITEM_CREATE",
                  "TASK_ASSIGNMENT_CREATE",
                  "TASK_ASSIGNMENT_DELETE",
                  "TASK_ASSIGNMENT_UPDATE",
                  "TASK_CREATE",
                  "TASK_UPDATE",
                  "TERMS_OF_SERVICE_ACCEPT",
                  "TERMS_OF_SERVICE_REJECT",
                  "UNDELETE",
                  "UNLOCK",
                  "UNSHARE",
                  "UPDATE_COLLABORATION_EXPIRATION",
                  "UPDATE_SHARE_EXPIRATION",
                  "UPLOAD",
                  "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE",
                  "WATERMARK_LABEL_CREATE",
                  "WATERMARK_LABEL_DELETE"
                ]
              },
              {
                "description": "The event type that triggered this event"
              }
            ]
          },
          "session_id": {
            "type": "string",
            "example": "70090280850c8d2a1933c1",
            "description": "The session of the user that performed the action. Not all events will\npopulate this attribute."
          },
          "source": {
            "type": "object",
            "allOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/File--Standard"
                  },
                  {
                    "$ref": "#/components/schemas/Folder--Standard"
                  },
                  {
                    "$ref": "#/components/schemas/Comment"
                  }
                ]
              }
            ],
            "description": "The object that triggered this event"
          },
          "additional_details": {
            "type": "object",
            "example": "",
            "description": "This object provides additional information about the event if available.\n\nThis can include how a user performed an event as well as additional\ninformation to correlate an event to external Keysafe logs. Not all events\nhave an additional_details object.  This object is only available in the\nEnterprise Events."
          }
        }
      },
      "Events": {
        "title": "Events",
        "x-box-resource-id": "events",
        "x-box-tag": "events",
        "description": "A list of event objects",
        "properties": {
          "chunk_size": {
            "description": "The number of pages of events remaining.",
            "example": 2,
            "type": "integer",
            "format": "int64"
          },
          "next_stream_position": {
            "description": "The stream position of the start of the next page\nof events.",
            "example": "1152922976252290886",
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "File": {
        "title": "File",
        "x-box-resource-id": "file",
        "x-box-has-field-variants": true,
        "description": "A full representation of a file, as can be returned from any\nfile API endpoints by default",
        "x-box-tag": "files",
        "allOf": [
          {
            "$ref": "#/components/schemas/File--Standard"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "version_number": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "1",
                "description": "The version number of this file"
              },
              "comment_count": {
                "x-box-field-variant": 2,
                "type": "integer",
                "example": 10,
                "description": "The number of comments on this file"
              },
              "permissions": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FilePermissions"
                  },
                  {
                    "description": "Describes the permissions that the current user has\nfor this file."
                  },
                  {
                    "x-box-field-variant": 2
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "tags": {
                "x-box-field-variant": 2,
                "type": "array",
                "example": [
                  "draft",
                  "needs_review"
                ],
                "items": {
                  "type": "string"
                },
                "description": "All tags applied to this folder."
              },
              "lock": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Lock"
                  },
                  {
                    "description": "The lock held on this file. If there is no lock, this can either\nbe `null` or have a timestamp in the past."
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ],
                "nullable": true
              },
              "extension": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "png",
                "description": "Indicates the suffix, when available, on the file. By default,\nset to an empty string. The suffix usually indicates the encoding\n(file format) of the file contents or usage."
              },
              "is_package": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether the file is a package. Used for Mac Packages used by iWorks."
              },
              "expiring_embed_link": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "https://app.box.com/preview/expiring_embed/gvoct6FE!",
                "description": "Requesting this field creates an expiring URL for an\nembedded preview session in an iframe.\n\nThis URL will expire after 60 seconds and the session will\nexpire after 60 minutes."
              },
              "watermark_info": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WatermarkInfo"
                  },
                  {
                    "description": "Information about the watermarking on this file"
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ]
              },
              "allowed_invitee_roles": {
                "x-box-field-variant": 2,
                "type": "array",
                "description": "Folder [collaboration](#collaboration-object) roles allowed by the\nenterprise administrator.",
                "items": {
                  "type": "string"
                },
                "example": [
                  "open"
                ],
                "enum": [
                  "open",
                  "company",
                  "collaborators"
                ]
              },
              "is_externally_owned": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether this file is owned by a user outside of the enterprise."
              },
              "has_collaborations": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether this file has any collaborators."
              },
              "metadata": {
                "x-box-field-variant": 2,
                "type": "object",
                "description": "A list of key-value pairs of metadata objects within their\nscopes.\n\nTo access the metadata for a file, first use the\n[Metadata](#metadata) endpoints to determine\nthe metadata templates available to your enterprise.\n\nThe use the [Retrieve File](#get-file-id) endpoint with\nthe `fields` query parameter to get the metadata by ID. The\nID for the metadata template will be in the format\n`metadata.<scope>.<templatename>`, for example\n`fields=metadata.global.properties`.",
                "example": {
                  "global": {
                    "marketingCollateral": {
                      "$canEdit": true,
                      "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                      "$parent": "folder_59449484661",
                      "$scope": "enterprise_27335",
                      "$template": "blueprintTemplate",
                      "$type": "blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                      "$typeVersion": 2,
                      "$version": 1
                    }
                  }
                },
                "enum": [
                  "global",
                  "enteprise_<:enterprise_id>"
                ],
                "additionalProperties": {
                  "type": "object",
                  "description": "The name of the metadata template",
                  "example": {
                    "marketingCollateral": {
                      "$canEdit": true,
                      "$id": "01234500-12f1-1234-aa12-b1d234cb567e",
                      "$parent": "folder_59449484661",
                      "$scope": "enterprise_27335",
                      "$template": "blueprintTemplate",
                      "$type": "blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
                      "$typeVersion": 2,
                      "$version": 1
                    }
                  },
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Metadata"
                  }
                }
              }
            }
          }
        ]
      },
      "Files": {
        "title": "Files",
        "x-box-resource-id": "files",
        "x-box-tag": "files",
        "description": "A list of files",
        "properties": {
          "total_count": {
            "description": "The number of files.",
            "example": 1,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "description": "A list of files",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          }
        }
      },
      "File--Standard": {
        "title": "File (Standard)",
        "x-box-resource-id": "file--standard",
        "x-box-tag": null,
        "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/File--Mini"
          },
          {
            "properties": {
              "sha1": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "digest",
                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                "description": "The SHA1 hash of the file."
              },
              "description": {
                "x-box-field-variant": 1,
                "type": "string",
                "description": "The description of the file",
                "maxLength": 256,
                "example": "Contract for Q1 renewal"
              },
              "size": {
                "x-box-field-variant": 1,
                "type": "integer",
                "description": "The file size in bytes. Be careful parsing this integer, it can\neasily go into [exponent notation](http://en.wikipedia.org/wiki/\\\nDouble-precision_floating-point_format).",
                "example": 629644
              },
              "path_collection": {
                "x-box-field-variant": 1,
                "type": "array",
                "description": "The path of folders to this file, starting at the root",
                "items": {
                  "$ref": "#/components/schemas/Folder--Mini"
                }
              },
              "created_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When this file was upload to Boxâ€™s servers",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When this file was last updated on the Box servers",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trashed_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When this file was last moved to the trash",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "purged_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When this file will be permanently deleted",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "content_created_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When this file was created originally",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "content_modified_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When this file was last updated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "expires_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When the file will automatically be deleted",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created this file"
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ]
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last modified this file"
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ]
              },
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who owns this file"
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ]
              },
              "shared_link": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SharedLink"
                  },
                  {
                    "description": "The shared link object for this file. Will be\n`null` if no shared link has been created."
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ],
                "nullable": true
              },
              "parent": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Folder--Mini"
                  },
                  {
                    "description": "The folder that contains this file."
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ]
              },
              "item_status": {
                "x-box-field-variant": 1,
                "type": "string",
                "example": "active",
                "enum": [
                  "active",
                  "trashed",
                  "deleted"
                ],
                "description": "Whether this item is deleted or not. Values include `active`,\n`trashed` if the file has been moved to the trash, and `deleted` if\nthe file has been permanently deleted"
              }
            }
          }
        ]
      },
      "File--Mini": {
        "title": "File (Mini)",
        "x-box-resource-id": "file--mini",
        "x-box-tag": null,
        "description": "A mini representation of a file, used when\nnested under another resource.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`file`",
                "example": "file",
                "enum": [
                  "file"
                ]
              },
              "sequence_id": {
                "type": "string",
                "example": "1",
                "description": "A unique ID for use with the /events endpoint"
              },
              "etag": {
                "type": "string",
                "example": "1",
                "description": "The entity tag of this file object. Used with `If-Match`\nheaders."
              },
              "name": {
                "type": "string",
                "description": "The name of the file",
                "example": "Contract.png"
              }
            }
          }
        ]
      },
      "FilePermissions": {
        "title": "File Permissions",
        "x-box-resource-id": "file-permissions",
        "description": "The permissions that the authenticated user has for a file.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Permissions"
          },
          {
            "properties": {
              "can_annotate": {
                "type": "boolean",
                "description": "Specifies if the user can place annotations on this file.",
                "example": true,
                "nullable": false
              },
              "can_comment": {
                "type": "boolean",
                "description": "Specifies if the user can place comments on this file.",
                "example": true,
                "nullable": false
              },
              "can_preview": {
                "type": "boolean",
                "description": "Specifies if the user can preview this file.",
                "example": true,
                "nullable": false
              },
              "can_upload": {
                "type": "boolean",
                "description": "Specifies if the user can upload a new version of this file.",
                "example": true,
                "nullable": false
              },
              "can_view_annotations_all": {
                "type": "boolean",
                "description": "Specifies if the user view all annotations placed on this file",
                "example": true,
                "nullable": false
              },
              "can_view_annotations_self": {
                "type": "boolean",
                "description": "Specifies if the user view annotations placed by themselves\non this file",
                "example": true,
                "nullable": false
              }
            }
          }
        ]
      },
      "FileScope": {
        "title": "File Scope",
        "x-box-resource-id": "file_scope",
        "description": "A relation between a file and the scopes for which the file can be accessed",
        "properties": {
          "scope": {
            "type": "string",
            "description": "The file scopes for the file access",
            "example": "item_download",
            "enum": [
              "annotation_edit",
              "annotation_view_all",
              "annotation_view_self",
              "base_explorer",
              "base_picker",
              "base_preview",
              "base_upload",
              "item_delete",
              "item_download",
              "item_preview",
              "item_rename",
              "item_share",
              null
            ]
          },
          "object": {
            "allOf": [
              {
                "$ref": "#/components/schemas/File--Mini"
              },
              {
                "description": "The file for which the file can be accessed"
              }
            ]
          }
        }
      },
      "FileVersion": {
        "title": "File Version",
        "x-box-resource-id": "file_version",
        "x-box-tag": "file_versions",
        "description": "A full representation of a file version",
        "allOf": [
          {
            "$ref": "#/components/schemas/FileVersion--Mini"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the file version",
                "example": "tigers.jpeg"
              },
              "size": {
                "type": "integer",
                "format": "int64",
                "description": "Size of the file version in bytes",
                "example": 629644
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the file version object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the file version object was last updated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last updated the file version"
                  }
                ]
              },
              "trashed_at": {
                "type": "string",
                "description": "When the file version object was trashed.",
                "format": "date-time",
                "nullable": true,
                "example": "2012-12-12T10:53:43-08:00"
              },
              "purged_at": {
                "type": "string",
                "description": "When the file version object will be permanently deleted.",
                "format": "date-time",
                "nullable": true,
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "FileVersions": {
        "title": "File Versions",
        "x-box-resource-id": "file_versions",
        "x-box-tag": "file_versions",
        "description": "A list of file versions",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileVersion"
                }
              }
            }
          }
        ]
      },
      "FileVersion--Mini": {
        "title": "File Version (Mini)",
        "x-box-resource-id": "file_version--mini",
        "description": "A mini representation of a file version, used when\nnested under another resource.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`file_version`",
                "example": "file_version",
                "enum": [
                  "file_version"
                ]
              },
              "sha1": {
                "type": "string",
                "description": "The SHA1 hash of this file.",
                "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
              }
            }
          }
        ]
      },
      "FileVersionLegalHold": {
        "title": "Legal Hold",
        "x-box-resource-id": "file_version_legal_hold",
        "x-box-tag": "file_version_legal_holds",
        "description": "File-Version-Legal-Hold is an entity representing all\nholds on a File Version.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`file_version_legal_hold`",
                "example": "file_version_legal_hold",
                "enum": [
                  "file_version_legal_hold"
                ]
              },
              "file_version": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileVersion--Mini"
                  },
                  {
                    "description": "The file version that is held"
                  }
                ]
              },
              "file": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file for the file version held.\nNote that there is no guarantee that the current\nversion of this file is held."
                  }
                ]
              },
              "legal_hold_policy_assignments": {
                "description": "List of assignments contributing to this Hold.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LegalHoldPolicyAssignment"
                }
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "description": "Time that this File-Version-Legal-Hold was\ndeleted.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "FileVersionLegalHolds": {
        "title": "Legal Holds",
        "x-box-resource-id": "file_version_legal_holds",
        "x-box-tag": "file_version_legal_holds",
        "description": "A list of file version legal holds.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileVersionLegalHold"
                }
              }
            }
          }
        ]
      },
      "FileVersionRetention": {
        "title": "Retention",
        "x-box-resource-id": "file_version_retention",
        "x-box-tag": "file_version_retentions",
        "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can apply policies to\nspecified folders, or an entire enterprise. A file version retention\nis a  record for a retained file version. To use this feature,\nyou must  have the manage retention policies scope enabled for your\nAPI key via  your application management console. For more information\nabout retention policies, please visit our help documentation",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`file_version_retention`",
                "example": "file_version_retention",
                "enum": [
                  "file_version_retention"
                ]
              },
              "file_version": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileVersion--Mini"
                  },
                  {
                    "description": "The file version this file version retention was\napplied to"
                  }
                ]
              },
              "file": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file this file version retention was applied to"
                  }
                ]
              },
              "applied_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this file version retention object was\ncreated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "disposition_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention period expires on this file\nversion retention",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "winning_retention_policy": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetentionPolicy--Mini"
                  },
                  {
                    "description": "The winning retention policy applied to this file\nversion retention. A file version can have multiple\nretention policies applied."
                  }
                ]
              }
            }
          }
        ]
      },
      "FileVersionRetentions": {
        "title": "Retentions",
        "x-box-resource-id": "file_version_retentions",
        "x-box-tag": "file_version_retentions",
        "description": "A list of file version retentions.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FileVersionRetention"
                }
              }
            }
          }
        ]
      },
      "Folder": {
        "title": "Folder",
        "x-box-resource-id": "folder",
        "x-box-has-field-variants": true,
        "x-box-sanitized": true,
        "description": "A full representation of a folder, as can be returned from any\nfolder API endpoints by default",
        "x-box-tag": "folders",
        "allOf": [
          {
            "$ref": "#/components/schemas/Folder--Standard"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "sync_state": {
                "allOf": [
                  {
                    "type": "string",
                    "example": "synced",
                    "nullable": false,
                    "description": "Specifies if the user has marked Box Drive or their mobile apps\nto sync this folder to their device.",
                    "enum": [
                      "synced",
                      "not_synced",
                      "partially_synced"
                    ]
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ]
              },
              "has_collaborations": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "nullable": false,
                "description": "Specifies if this folder has any other collaborators."
              },
              "permissions": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FolderPermissions"
                  },
                  {
                    "description": "Describes the permissions that the current user has\nfor this folder"
                  },
                  {
                    "x-box-field-variant": 2
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "tags": {
                "allOf": [
                  {
                    "type": "array",
                    "example": [
                      "approved"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "description": "The tags for this item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field."
                  },
                  {
                    "x-box-field-variant": 2
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "can_non_owners_invite": {
                "allOf": [
                  {
                    "type": "boolean",
                    "example": true,
                    "description": "Specifies if users who are not the owner\nof the folder can invite new collaborators to the folder."
                  },
                  {
                    "x-box-field-variant": 2
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "is_externally_owned": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "nullable": false,
                "description": "Specifies if this folder is owned by a user outside of the\nauthenticated enterprise."
              },
              "is_collaboration_restricted_to_enterprise": {
                "allOf": [
                  {
                    "type": "boolean",
                    "example": true,
                    "description": "Specifies if new invites to this folder are restricted to users\nwithin the enterprise. This does not affect existing\ncollaborations."
                  },
                  {
                    "x-box-field-variant": 2
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "allowed_shared_link_access_levels": {
                "x-box-field-variant": 2,
                "type": "array",
                "example": [
                  "open"
                ],
                "items": {
                  "type": "string"
                },
                "enum": [
                  "open",
                  "company",
                  "collaborators"
                ],
                "nullable": false,
                "description": "A list of access levels for shared that are available\nfor this folder.\n\nFor some folders, like the root folder, this will always\nbe an empty list as sharing is not allowed at that level."
              },
              "allowed_invitee_roles": {
                "x-box-field-variant": 2,
                "type": "array",
                "example": [
                  "open"
                ],
                "nullable": false,
                "enum": [
                  "editor",
                  "viewer",
                  "previewer",
                  "uploader",
                  "previewer uploader",
                  "viewer uploader",
                  "co-owner"
                ],
                "description": "A list of the types of roles that user can be invited at\nwhen sharing this folder.",
                "items": {
                  "type": "string"
                }
              },
              "watermark_info": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WatermarkInfo"
                  },
                  {
                    "description": "Details about the watermark applied to this folder"
                  },
                  {
                    "x-box-field-variant": 2
                  },
                  {
                    "nullable": false
                  }
                ]
              }
            }
          }
        ]
      },
      "Folder--Standard": {
        "title": "Folder (Standard)",
        "x-box-resource-id": "folder--standard",
        "x-box-tag": null,
        "x-box-reference-hide": true,
        "x-box-sanitized": true,
        "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
        "allOf": [
          {
            "$ref": "#/components/schemas/Folder--Mini"
          },
          {
            "properties": {
              "created_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The date and time when the folder was created. This value may\nbe `null` for some folders such as the root folder or the trash\nfolder.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the folder was last updated. This value may\nbe `null` for some folders such as the root folder or the trash\nfolder.",
                "example": "2012-12-12T10:53:43-08:00",
                "nullable": true
              },
              "description": {
                "allOf": [
                  {
                    "type": "string",
                    "description": "The optional description of this folder",
                    "maxLength": 256,
                    "example": "Legal contracts for the new ACME deal",
                    "nullable": false
                  },
                  {
                    "x-box-field-variant": 1
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "size": {
                "x-box-field-variant": 1,
                "type": "integer",
                "format": "int64",
                "description": "The folder size in bytes.\n\nBe careful parsing this integer as its\nvalue can get very large.",
                "example": 629644,
                "nullable": false
              },
              "path_collection": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PathCollection"
                  },
                  {
                    "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                  },
                  {
                    "x-box-field-variant": 1
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created this folder"
                  },
                  {
                    "x-box-field-variant": 1
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last modified this folder."
                  },
                  {
                    "x-box-field-variant": 1
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "trashed_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "The time at which this folder was put in the trash.",
                "example": "2012-12-12T10:53:43-08:00",
                "nullable": true
              },
              "purged_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "The time at which this folder is expected to be purged\nfrom the trash.\nThe time at which this folder will be permanently deleted.",
                "example": "2012-12-12T10:53:43-08:00",
                "nullable": true
              },
              "content_created_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The date and time at which this folder was originally\ncreated.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "content_modified_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The date and time at which this folder was last updated.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "expires_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The time and which the folder will be automatically be deleted.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who owns this folder."
                  },
                  {
                    "x-box-field-variant": 1
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "shared_link": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SharedLink"
                  },
                  {
                    "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ],
                "nullable": true
              },
              "folder_upload_email": {
                "x-box-field-variant": 1,
                "type": "object",
                "nullable": true,
                "properties": {
                  "access": {
                    "type": "string",
                    "example": "open",
                    "nullable": false,
                    "enum": [
                      "open",
                      "collaborators"
                    ],
                    "description": "When this parameter has been set, users can email files\nto the email address that has been automatically\ncreated for this folder.\n\nTo create an email address, set this property either when\ncreating or updating the folder.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted. When set to `open`\nit will accept emails from any email address."
                  },
                  "email": {
                    "description": "The optional upload email address for this folder.",
                    "type": "string",
                    "format": "email",
                    "example": "upload.Contracts.asd7asd@u.box.com",
                    "nullable": false
                  }
                }
              },
              "parent": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Folder--Mini"
                  },
                  {
                    "description": "The optional folder that this folder is located within.\n\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                  },
                  {
                    "x-box-field-variant": 1
                  }
                ],
                "nullable": true
              },
              "item_status": {
                "x-box-field-variant": 1,
                "type": "string",
                "description": "Defines if this item has been deleted or not.\n\n* `active` when the item has is not in the trash\n* `trashed` when the item has been moved to the trash but not deleted\n* `deleted` when the item has been permanently deleted.",
                "enum": [
                  "active",
                  "trashed",
                  "deleted"
                ],
                "nullable": false,
                "example": "active"
              },
              "item_collection": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Items"
                  },
                  {
                    "description": "A page of the items that are in the folder.\n\nThis field can only be requested when querying a folder's\ninformation, not when querying a folder's items."
                  },
                  {
                    "x-box-field-variant": 1
                  },
                  {
                    "nullable": false
                  }
                ],
                "x-box-field-variant": 1
              }
            }
          }
        ]
      },
      "Folder--Mini": {
        "title": "Folder (Mini)",
        "x-box-resource-id": "folder--mini",
        "x-box-tag": null,
        "description": "A mini representation of a file version, used when\nnested under another resource.",
        "x-box-reference-hide": true,
        "x-box-sanitized": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`folder`",
                "example": "folder",
                "enum": [
                  "folder"
                ],
                "nullable": false
              },
              "sequence_id": {
                "type": "string",
                "nullable": true,
                "example": "1",
                "description": "A unique identifier that can be used in combination\nwith the `/events` endpoint. May be `null` for\nsome folders such as the root folder and trash folder."
              },
              "etag": {
                "type": "string",
                "nullable": true,
                "example": "1",
                "description": "The HTTP etag of this folder. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the folder if (no) changes have happened."
              },
              "name": {
                "type": "string",
                "description": "The name of the folder.",
                "example": "Contracts",
                "nullable": false
              }
            }
          }
        ]
      },
      "FolderUploadEmail": {
        "title": "Folder Upload Email",
        "x-box-resource-id": "folder_upload_email",
        "type": "object",
        "description": "The writable Folder Upload Email object",
        "properties": {
          "access": {
            "type": "string",
            "example": "open",
            "nullable": false,
            "enum": [
              "open",
              "collaborators"
            ],
            "description": "When this parameter has been set, users can email files\nto the email address that has been automatically\ncreated for this folder.\n\nTo create an email address, set this property either when\ncreating or updating the folder.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted. When set to `open`\nit will accept emails from any email address."
          }
        }
      },
      "FolderPermissions": {
        "title": "Folder Permissions",
        "x-box-resource-id": "folder-permissions",
        "description": "The permissions that the authenticated user has for a folder.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Permissions"
          },
          {
            "properties": {
              "can_upload": {
                "type": "boolean",
                "description": "Specifies if the user can upload into this folder.",
                "example": true,
                "nullable": false
              }
            }
          }
        ]
      },
      "Group": {
        "title": "Group",
        "x-box-resource-id": "group",
        "x-box-tag": "groups",
        "x-box-has-field-variants": true,
        "description": "Groups contain a set of users, and can be used in place of\nusers in some operations, such as collaborations.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Group--Standard"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "provenance": {
                "x-box-field-variant": 2,
                "type": "string",
                "description": "Keeps track of which external source this group is\ncoming from (e.g. \"Active Directory\", \"Google Groups\",\n\"Facebook Groups\").  Setting this will\nalso prevent Box users from editing the group name\nand its members directly via the Box web application.\nThis is desirable for one-way syncing of groups.",
                "maxLength": 255,
                "example": "Active Directory"
              },
              "external_sync_identifier": {
                "x-box-field-variant": 2,
                "type": "string",
                "description": "An arbitrary identifier that can be used by\nexternal group sync tools to link this Box Group to\nan external group. Example values of this field\ncould be an Active Directory Object ID or a Google\nGroup ID.  We recommend you use of this field in\norder to avoid issues when group names are updated in\neither Box or external systems.",
                "example": "AD:123456"
              },
              "description": {
                "x-box-field-variant": 2,
                "type": "string",
                "description": "Human readable description of the group.",
                "maxLength": 255,
                "example": "Support Group - as imported from Active Directory"
              },
              "invitability_level": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "admins_only",
                "description": "Specifies who can invite the group to collaborate\non folders (Create Collaboration).\n\nWhen set to `admins_only` the enterprise admin, co-admins,\nand the group's admin can invite the group.\n\nWhen set to `admins_and_members` all the admins listed\nabove and group members can invite the group.\n\nWhen set to `all_managed_users` all managed users in the\nenterprise can invite the group.",
                "enum": [
                  "admins_only",
                  "admins_and_members",
                  "all_managed_users"
                ]
              },
              "member_viewability_level": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "admins_only",
                "description": "Specifies who can view the members of the group\n(Get Memberships for Group).\n\n* `admins_only` - the enterprise admin, co-admins, group's\n  group admin\n* `admins_and_members` - all admins and group members\n* `all_managed_users` - all managed users in the\n  enterprise",
                "enum": [
                  "admins_only",
                  "admins_and_members",
                  "all_managed_users"
                ]
              }
            }
          }
        ]
      },
      "Groups": {
        "title": "Groups",
        "x-box-resource-id": "groups",
        "x-box-tag": "groups",
        "description": "A list of groups.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        ]
      },
      "Group--Standard": {
        "title": "Group (Standard)",
        "x-box-resource-id": "group--standard",
        "description": "A standard representation of a group, as returned from any\ngroup API endpoints by default",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Group--Mini"
          },
          {
            "properties": {
              "created_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When the group object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When the group object was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Group--Mini": {
        "title": "Group (Mini)",
        "x-box-resource-id": "group--mini",
        "type": "object",
        "description": "Mini representation of a group, including id and name of\ngroup.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`group`",
                "example": "group",
                "enum": [
                  "group"
                ]
              },
              "name": {
                "type": "string",
                "description": "The name of the group",
                "example": "Support"
              },
              "group_type": {
                "type": "string",
                "description": "The type of the group.",
                "example": "managed_group",
                "enum": [
                  "managed_group",
                  "all_users_group"
                ]
              }
            }
          }
        ]
      },
      "GroupMembership": {
        "title": "Membership",
        "x-box-resource-id": "group_membership",
        "x-box-tag": "memberships",
        "description": "Membership is used to signify that a user is part of a\ngroup.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`group_membership`",
                "example": "group_membership",
                "enum": [
                  "group_membership"
                ]
              },
              "user": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user that the membership applies to"
                  }
                ]
              },
              "group": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Group--Mini"
                  },
                  {
                    "description": "The group that the membership applies to"
                  }
                ]
              },
              "role": {
                "type": "string",
                "example": "member",
                "description": "The role of the user in the group.",
                "enum": [
                  "member",
                  "admin"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this membership was created.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this membership was last modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "GroupMemberships": {
        "title": "Memberships",
        "x-box-resource-id": "group_memberships",
        "x-box-tag": "memberships",
        "description": "A list of group memberships.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupMembership"
                }
              }
            }
          }
        ]
      },
      "Invite": {
        "title": "Invite",
        "x-box-resource-id": "invite",
        "x-box-tag": "invites",
        "description": "An invite for a user to an enterprise.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`invite`",
                "example": "invite",
                "enum": [
                  "invite"
                ]
              },
              "invited_to": {
                "$ref": "#/components/schemas/Enterprise"
              },
              "actionable_by": {
                "$ref": "#/components/schemas/User--Mini"
              },
              "invited_by": {
                "$ref": "#/components/schemas/User--Mini"
              },
              "status": {
                "description": "The status of the invite",
                "type": "string",
                "example": "pending"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the invite was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the invite was modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Item": {
        "title": "Item",
        "x-box-resource-id": "item_reference",
        "x-box-tag": "shared_links",
        "description": "A generic mini representation of a file, folder, user or enterprise",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "description": "The type of this item",
                "type": "string",
                "example": "file"
              },
              "sequence_id": {
                "type": "string",
                "example": "1",
                "description": "A unique ID for use with the `/events` endpoint. May be `null` for\nsome items, such as root or trash."
              },
              "etag": {
                "type": "string",
                "example": "1",
                "description": "The entity tag of this item. Used with If-Match headers.\nMay be `null` for some folders such as root or trash."
              },
              "name": {
                "type": "string",
                "description": "The name of the item.",
                "example": "Pictures"
              }
            }
          }
        ]
      },
      "Items": {
        "title": "Items",
        "x-box-resource-id": "item_collection",
        "x-box-tag": "folders",
        "description": "A list of files, folders, and web links in\ntheir mini representation.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "description": "The items in this collection.",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/File--Mini"
                    },
                    {
                      "$ref": "#/components/schemas/Folder--Mini"
                    },
                    {
                      "$ref": "#/components/schemas/WebLink--Mini"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "LegalHoldPolicy": {
        "title": "Legal Hold Policy",
        "x-box-resource-id": "legal_hold_policy",
        "x-box-tag": "legal_hold_policies",
        "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LegalHoldPolicy--Mini"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "policy_name": {
                "type": "string",
                "example": "Policy 4",
                "description": "Name of the legal hold policy.",
                "maxLength": 254
              },
              "description": {
                "type": "string",
                "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit.",
                "maxLength": 500,
                "example": "Postman created policy"
              },
              "status": {
                "type": "string",
                "example": "active",
                "enum": [
                  "active",
                  "applying",
                  "releasing",
                  "released"
                ],
                "description": "* 'active' - the policy is not in a transition state\n* 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active"
              },
              "assignment_counts": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssignmentCounts"
                  },
                  {
                    "description": "Counts of assignments within this policy by apply-to type"
                  }
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the legal hold policy object"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal hold policy object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal hold policy object was modified.\nDoes not update when assignments are added or removed.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the policy release request was sent. (Because\nit can take time for a policy to fully delete, this\nisn't quite the same time that the policy is fully deleted).\n\nIf `null`, the policy was not deleted.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "filter_started_at": {
                "type": "string",
                "format": "date-time",
                "description": "User-specified, optional date filter applies to\nCustodian assignments only",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "filter_ended_at": {
                "type": "string",
                "format": "date-time",
                "description": "User-specified, optional date filter applies to\nCustodian assignments only",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "release_notes": {
                "type": "string",
                "example": "Example",
                "description": "Optional notes about why the policy was created.",
                "maxLength": 500
              }
            }
          }
        ]
      },
      "LegalHoldPolicies": {
        "title": "Legal Hold Policies",
        "x-box-resource-id": "legal_hold_policies",
        "x-box-tag": "legal_hold_policies",
        "description": "A list of legal hold policies.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LegalHoldPolicy"
                }
              }
            }
          }
        ]
      },
      "LegalHoldPolicy--Mini": {
        "title": "Legal Hold Policy (Mini)",
        "x-box-resource-id": "legal_hold_policy--mini",
        "description": "A mini legal hold policy",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`legal_hold_policy`",
                "example": "legal_hold_policy",
                "enum": [
                  "legal_hold_policy"
                ]
              }
            }
          }
        ]
      },
      "LegalHoldPolicyAssignment": {
        "title": "Legal Hold Policy Assignment",
        "x-box-resource-id": "legal_hold_policy_assignment",
        "x-box-tag": "legal_hold_policy_assignments",
        "description": "Legal Hold Assignments are used to assign Legal Hold\nPolicies to Users, Folders, Files, or File Versions.\n\nCreating a Legal Hold Assignment puts a hold\non the File-Versions that belong to the Assignment's\n'apply-to' entity.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`legal_hold_policy_assignment`",
                "example": "legal_hold_policy_assignment",
                "enum": [
                  "legal_hold_policy_assignment"
                ]
              },
              "legal_hold_policy": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LegalHoldPolicy--Mini"
                  },
                  {
                    "description": "The policy that the legal hold policy assignment\nis part of"
                  }
                ]
              },
              "assigned_to": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "description": "The item that the the legal hold policy\nis assigned to. Includes type and ID."
                  }
                ]
              },
              "assigned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the legal hold policy\nassignment"
                  }
                ]
              },
              "assigned_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal hold policy assignment object was\ncreated",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the assignment release request was sent.\n(Because it can take time for an assignment to fully\ndelete, this isn't quite the same time that the\nassignment is fully deleted). If null, Assignment\nwas not deleted.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "LegalHoldPolicyAssignments": {
        "title": "Legal Hold Policy Assignments",
        "x-box-resource-id": "legal_hold_policy_assignments",
        "x-box-tag": "legal_hold_policy_assignments",
        "description": "A list of legal hold policies assignments.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LegalHoldPolicyAssignment"
                }
              }
            }
          }
        ]
      },
      "Lock": {
        "title": "Lock",
        "x-box-resource-id": "lock",
        "description": "The lock held on a file.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`lock`",
                "example": "lock",
                "enum": [
                  "lock"
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The use who created the lock"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "The time this lock was created at"
              },
              "expired_at": {
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00",
                "description": "The time this lock is to expire at, which might be in the past"
              },
              "is_download_prevented": {
                "type": "boolean",
                "example": true,
                "description": "Whether or not the file can be downloaded while locked"
              }
            }
          }
        ]
      },
      "Lock--Writable": {
        "title": "Lock Writable",
        "x-box-resource-id": "lock--writable",
        "type": "object",
        "description": "Defines a lock on an item",
        "x-box-reference-hide": true,
        "properties": {
          "access": {
            "type": "string",
            "description": "The type of this item, should be `lock`.",
            "enum": [
              "lock"
            ],
            "example": "lock"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-12-12T10:53:43-08:00",
            "description": "The time at which the lock expires"
          },
          "is_download_prevented": {
            "type": "boolean",
            "example": true,
            "description": "Whether the file can be downloaded while locked"
          }
        }
      },
      "MarkerPagination": {
        "title": "Marker Pagination",
        "x-box-resource-id": "marker_pagination",
        "description": "The part of an API response that describes marker\nbased pagination",
        "properties": {
          "limit": {
            "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
            "example": 1000,
            "type": "integer",
            "format": "int64"
          },
          "next_marker": {
            "description": "The marker for the start of the next page of results.",
            "example": 3000,
            "type": "integer",
            "format": "int64"
          },
          "prev_marker": {
            "description": "The marker for the start of the previous page of results.",
            "example": 1000,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Metadata": {
        "title": "Metadata",
        "x-box-resource-id": "metadata",
        "description": "A piece of metadata as specified by a metadata template and\napplied to a file or folder.",
        "x-box-tag": "file_metadata",
        "type": "object",
        "properties": {
          "$canEdit": {
            "type": "boolean",
            "example": true,
            "description": "Whether the user can edit this metadata"
          },
          "$id": {
            "type": "string",
            "format": "uuid",
            "example": "01234500-12f1-1234-aa12-b1d234cb567e",
            "description": "36-character UUID to identify the metadata object"
          },
          "$parent": {
            "type": "string",
            "example": "folder_59449484661,",
            "description": "An ID for the parent folder"
          },
          "$scope": {
            "type": "string",
            "example": "enterprise_27335",
            "description": "An ID for the scope in which this template\nhas been applied"
          },
          "$template": {
            "type": "string",
            "example": "blueprintTemplate",
            "description": "The name of the template"
          },
          "$type": {
            "type": "string",
            "example": "blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0",
            "description": "A unique identifier for the \"type\" of this instance. This is an internal\nsystem property and should not be used by a client application."
          },
          "$typeVersion": {
            "type": "integer",
            "example": 2,
            "description": "The last-known version of the template of the object. This is an internal\nsystem property and should not be used by a client application."
          },
          "$version": {
            "type": "integer",
            "example": 1,
            "description": "The version of the metadata object. Starts at 0 and increases every time\na user-defined property is modified."
          }
        }
      },
      "Metadatas": {
        "title": "Metadatas",
        "x-box-resource-id": "metadatas",
        "x-box-tag": "file_metadata",
        "description": "A list of metadata",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metadata"
            }
          }
        }
      },
      "MetadataPatchItem": {
        "title": "Metadata Patch Item",
        "x-box-resource-id": "metadata-patch-item",
        "type": "object",
        "description": "A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a\nchange to make to the metadata.",
        "properties": {
          "op": {
            "type": "string",
            "example": "add",
            "enum": [
              "add",
              "replace",
              "remove",
              "test",
              "move",
              "copy"
            ],
            "description": "The operation type"
          },
          "path": {
            "type": "string",
            "example": "/currentState",
            "description": "The location in the metadata JSON object\nto apply the changes to, in the format of a\n[JSON-Pointer](https://tools.ietf.org/html/rfc6901).\n\nThe path must always be prefixed with a `/`.\n\nSpecial characters `~` and `/` in the key must be escaped\nto ensure the operation can be executed as intended."
          },
          "value": {
            "type": "string",
            "example": "reviewed",
            "description": "The value to be set or tested.\n\nRequired for `add`, `replace`, and `test` operations.\n\nFor `add`, if the value exists already the previous value will be\noverwritten by the new value.\n\nFor `replace`, the value must exist before replacing.\n\nFor `test`, the existing value at the `path` location must match\nthe specified value."
          },
          "from": {
            "type": "string",
            "example": "/nextState",
            "description": "Required for `move` or `copy`.\n\nThe location in the metadata JSON object to move or copy from,\nin the format of a\n[JSON-Pointer](https://tools.ietf.org/html/rfc6901)."
          }
        }
      },
      "MetadataCascadePolicy": {
        "title": "Metadata Cascade Policy",
        "x-box-resource-id": "metadata_cascade_policy",
        "x-box-tag": "metadata_cascade_policies",
        "description": "A cascade policy that applies to metadata policy template\nto a folder",
        "properties": {
          "id": {
            "type": "string",
            "example": "6fd4ff89-8fc1-42cf-8b29-1890dedd26d7",
            "description": "The ID of the metadata cascade policy object"
          },
          "owner_enterprise": {
            "type": "object",
            "description": "The enterprise that owns the policy.",
            "properties": {
              "type": {
                "type": "string",
                "example": "enterprise",
                "description": "`enterprise`",
                "enum": [
                  "enterprise"
                ]
              },
              "id": {
                "type": "string",
                "example": "690678",
                "description": "The ID of the enterprise that owns the policy."
              }
            }
          },
          "parent": {
            "type": "object",
            "description": "Represent the folder the policy is applied to",
            "properties": {
              "type": {
                "type": "string",
                "example": "folder",
                "description": "`folder`",
                "enum": [
                  "folder"
                ]
              },
              "id": {
                "type": "string",
                "example": "690678",
                "description": "The ID of the folder the policy is applied to"
              }
            }
          },
          "scope": {
            "type": "string",
            "example": "global",
            "description": "The scope of the target instance that will be cascaded down. The `scope`\nand `templateKey` together identify the metadata on the folder that is\nto be cascaded down. Today, only `global` and `enterprise_*` scopes are\nsupported."
          },
          "templateKey": {
            "type": "string",
            "example": "demo",
            "description": "The template key of the target metadata template to cascade down.\nThe `scope` & `templateKey` together identify the metadata on the f\nolder that is to be cascaded down."
          }
        }
      },
      "MetadataCascadePolicies": {
        "title": "Metadata Cascade Policies",
        "x-box-resource-id": "metadata_cascade_policies",
        "x-box-tag": "metadata_cascade_policies",
        "description": "A list of metadata cascade policies.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetadataCascadePolicy"
                }
              }
            }
          }
        ]
      },
      "MetadataFilter": {
        "title": "Metadata Filter",
        "x-box-resource-id": "metadata_filter",
        "description": "A metadata filter used for searching by metadata\ntemplate",
        "type": "object",
        "properties": {
          "scope": {
            "description": "Specifies the scope of the template to search for.",
            "type": "string",
            "example": "global",
            "enum": [
              "global",
              "enterprise"
            ]
          },
          "templateKey": {
            "description": "The key name of the template to search for. Only\none template name can be specified per filter.",
            "type": "string",
            "example": "marketingCollateral"
          },
          "filters": {
            "type": "object",
            "description": "Additional key/value pairs for the template to search for.\n\nFor floats and dates, you can include an (inclusive) upper\nbound parameter `lt` or (inclusive) lower bound parameter\n`gt`, or both.\n\nAn example filter for a `contractExpiration` on or before\n`08-01-16 UTC` would be listed as follow.\n\n`{\"contractExpiration\":{\"lt\":\"2016-08-01T00:00:00Z\"}}`",
            "example": {
              "documentType": "datasheet"
            },
            "additionalProperties": {
              "description": "The value for the custom field",
              "example": "datasheet",
              "type": "string"
            }
          }
        }
      },
      "MetadataTemplate": {
        "title": "Metadata Template",
        "x-box-resource-id": "metadata_template",
        "x-box-tag": "metadata_templates",
        "description": "A template for metadata that can be applied to files and folders",
        "allOf": [
          {
            "$ref": "#/components/schemas/MetadataTemplate--Writable"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "example": "f7a9891f",
                "description": "The ID of the template"
              }
            }
          }
        ]
      },
      "MetadataTemplates": {
        "title": "Metadata Templates",
        "x-box-resource-id": "metadata_templates",
        "x-box-tag": "metadata_templates",
        "description": "A list of metadata templates",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetadataTemplate"
                }
              }
            }
          }
        ]
      },
      "MetadataTemplate--Writable": {
        "title": "Metadata Template (Writable)",
        "x-box-resource-id": "metadata_template--writable",
        "description": "The writable parts of a metadata template that can be\napplied to files and folders",
        "properties": {
          "scope": {
            "type": "string",
            "description": "The scope of the object. `global` and `enterprise_*` scopes are supported.\n\nThe `global` scope contains the template with a key of `properties`,\nwhile the enterprise scope pertains to custom templates created within\nthe enterprise.\n\n The ID of the enterprise will be appended to the enterprise scope.",
            "example": "enterprise_123456"
          },
          "templateKey": {
            "type": "string",
            "example": "productInfo",
            "description": "A unique identifier for the template. The identifier must be unique across\nthe scope of the enterprise to which the metadata template is being\napplied.",
            "maxLength": 64,
            "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$"
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the template",
            "maxLength": 4096,
            "example": "Product Info"
          },
          "hidden": {
            "type": "boolean",
            "example": true,
            "description": "Whether this template is hidden in the UI",
            "default": false
          },
          "fields": {
            "type": "array",
            "description": "The ordered set of key:value pairs for the template.",
            "items": {
              "$ref": "#/components/schemas/MetadataTemplateField"
            }
          }
        }
      },
      "MetadataTemplateField": {
        "title": "Metadata Template Field",
        "x-box-resource-id": "metadata_template_field",
        "description": "An ordered set of key-value pairs that are part of a\nmetadata template",
        "properties": {
          "type": {
            "type": "string",
            "example": "string",
            "description": "The data type of the field's value",
            "enum": [
              "string",
              "enum",
              "float",
              "date"
            ]
          },
          "key": {
            "type": "string",
            "example": "category",
            "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs.",
            "maxLength": 256
          },
          "displayName": {
            "type": "string",
            "example": "Category",
            "description": "The display name of the field.",
            "maxLength": 4096
          },
          "description": {
            "type": "string",
            "example": "The category",
            "description": "A description of the field.",
            "maxLength": 4096
          },
          "hidden": {
            "type": "boolean",
            "example": true,
            "description": "Whether this template is hidden in the UI"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataTemplateFieldOption"
            }
          }
        }
      },
      "MetadataTemplateFieldOption": {
        "title": "Metadata Template Field Option",
        "x-box-resource-id": "metadata_template_field_option",
        "description": "For type `enum` and `multiSelect`, one of the potential values\nthat can be selected.",
        "properties": {
          "id": {
            "type": "string",
            "example": "f7a9895f",
            "description": "The ID of the option"
          },
          "key": {
            "description": "The text value of the option",
            "example": "category1",
            "type": "string"
          }
        }
      },
      "MetadataTemplatePatchItem": {
        "title": "Metadata Template Patch Item",
        "x-box-resource-id": "metadata-template-patch-item",
        "type": "object",
        "description": "A patch operation for the\nchanges to make to the metadata template.\n\nThe possible operations are as follows.\n\n* `addEnumOption` Adds an enum option at the\n  end of the enum option list for the specified `fieldKey`.\n\n  Example `{\"op\":\"addEnumOption\",\"fieldKey\":\"category\",\n  \"data\":{\"key\":\"New Option\"}}`\n\n* `addField` Adds a field at the end of the field list\n  for the template.\n\n  Example `{\"op\":\"addField\",\"data\":{\"displayName\":\"Category\",\n  \"key\":\"category\",\"hidden\":false,\"type\":\"string\"}}`.\n\n* `editTemplate` Allows for editing the base properties\n  of a template, mainly the `displayName` and `hidden`\n  properties.\n\n  Example `{\"op\":\"editTemplate\",\"data\":{\"displayName\":\"Client\"}}`.\n\n* `reorderEnumOptions` Reorders the enum option list to\n  match the requested enum option list.\n\n  Example `{\"op\":\"reorderEnumOptions\",\"fieldKey\":\"category\",\n  \"enumOptionKeys\":[\"option2\",\"option1\",\"option3\"]}`\n\n* `reorderFields`  Reorders the field list to match the requested\n  field list\n\n  Example `{\"op\":\"reorderFields\",\"fieldKeys\":[\"field2\",\"field1\",\"field3\"]}`\n\nThe following changes can affect existing instances of this template.\n\n* `editField` Edits any number of the base properties of a field, mainly\n  the `displayName`, `hidden`, `description`, and `key` properties.\n\n  If the key is changed, existing values of the specified field are\n  migrated to the new key. Search indexes are updated, which can take\n  time depending on how many files are affected by the change.\n\n  Example `{\"op\":\"editField\",\"fieldKey\":\"category\",\n  \"data\":{\"displayName\":\"Customer Group\"}}`\n\n* `editEnumOption` Edits one of the options of an enum field.\n\n  Example `{\"op\":\"editEnumOption\",\"fieldKey\":\"years\",\"enumOptionKey\":\"2011\",\n  \"data\":{\"key\":\"2020\"}}`\n\n* `removeEnumOption` Removes the specified enum option from the\n  specified enum field.\n\n  Example `{\"op\":\"removeEnumOption\",\"fieldKey\":\"years\",\n  \"enumOptionKey\":\"2011\"}`\n\n* `removeField` Removes the specified field from the template.\n\n  Example `{\"op\":\"removeField\",\"fieldKey\":\"brand\"}`",
        "properties": {
          "op": {
            "type": "string",
            "example": "addEnumOption",
            "enum": [
              "addEnumOption",
              "addField",
              "editTemplate",
              "reorderEnumOptions",
              "reorderFields",
              "editField",
              "editEnumOption",
              "removeEnumOption",
              "removeField"
            ],
            "description": "The operation type to perform on the template."
          },
          "data": {
            "description": "The data for the operation. Can vary depending on the operation.",
            "example": {
              "displayName": "New name"
            },
            "additionalProperties": {
              "type": "string",
              "example": "New name"
            }
          },
          "fieldKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "category",
              "name"
            ],
            "description": "For operations that affect multiple fields, the keys of the\nfields to be affected."
          },
          "enumOptionKeys": {
            "description": "For operations that affect multiple enum options,\nthe keys of the enum options to be affected.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "option1",
              "option2",
              "option3"
            ]
          }
        }
      },
      "MetadataCard": {
        "title": "Metadata Card",
        "x-box-resource-id": "metadata_card",
        "description": "A Box Skills card that is applied to the metadata\nof a file.",
        "x-box-tag": "skills",
        "required": [
          "type",
          "created_at",
          "skill",
          "skill_card_title"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "skill_card",
            "description": "`skill_card`",
            "enum": [
              "skills_card"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the card was created at",
            "example": "2012-12-12T10:53:43-08:00"
          },
          "skill_card_type": {
            "type": "string",
            "description": "The type of card to create",
            "example": "status",
            "enum": [
              "transcript",
              "keyword",
              "timeline",
              "status",
              "error"
            ]
          },
          "skill": {
            "type": "object",
            "description": "The skill that is updating the cards",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "service",
                "description": "`service`",
                "enum": [
                  "service"
                ]
              },
              "id": {
                "type": "string",
                "example": "43342423234",
                "description": "The ID of the skill."
              }
            }
          },
          "skill_card_title": {
            "type": "object",
            "description": "The title of the card",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string",
                "example": "my_transcripts",
                "description": "An identifier for your title"
              },
              "message": {
                "type": "string",
                "example": "My Transcripts",
                "description": "The actual title to show in the UI"
              }
            }
          },
          "invocation": {
            "type": "object",
            "description": "The current invocation of the skill",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "skill_invocation",
                "description": "`skill_invocation`",
                "enum": [
                  "skill_invocation"
                ]
              },
              "id": {
                "type": "string",
                "example": "33243242",
                "description": "The ID of the skill invocation."
              }
            }
          },
          "status": {
            "type": "object",
            "description": "Optional status. Used with a `card_type` of `status`.",
            "properties": {
              "code": {
                "type": "string",
                "description": "The type of status being set",
                "enum": [
                  "skills_pending_status",
                  "custom_error"
                ],
                "example": "skills_pending_status"
              },
              "message": {
                "type": "string",
                "description": "The message for the status to show in the UI",
                "example": "We're preparing to process your file. Please hold on!"
              }
            }
          },
          "entries": {
            "description": "An optional list of entries.\n\nUsed with a `card_type` of`transcript`, `keyword` or\n`timeline`.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataCardEntry"
            }
          },
          "duration": {
            "type": "integer",
            "example": 1000,
            "description": "An optional duration.\n\nUsed with a `card_type` of`transcript`, or\n`timeline`."
          }
        }
      },
      "MetadataCardEntry": {
        "title": "Metadata Card Entry",
        "x-box-resource-id": "metadata_cards_entry",
        "x-box-tag": "skills",
        "description": "An entry in the `entries` attribute of a metadata card",
        "required": [
          "type",
          "text"
        ],
        "properties": {
          "type": {
            "type": "string",
            "example": "text",
            "description": "`text`",
            "enum": [
              "text"
            ]
          },
          "text": {
            "type": "string",
            "example": "keyword1",
            "description": "The text of the entry"
          }
        }
      },
      "NotifiedUser": {
        "title": "Notified User",
        "x-box-resource-id": "notified_user",
        "description": "A user that is notified of an event.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of item to notify",
            "type": "string",
            "example": "user",
            "enum": [
              "user"
            ]
          },
          "id": {
            "description": "The id of the user to notify",
            "type": "string",
            "example": "12312312"
          },
          "name": {
            "type": "string",
            "description": "The name of the user to notify",
            "example": "Tim Apple"
          },
          "login": {
            "type": "string",
            "description": "The email address the user uses to notify",
            "example": "apple@example.com"
          }
        }
      },
      "OAuth2Error": {
        "title": "OAuth2 Error",
        "x-box-resource-id": "oauth2_error",
        "x-box-tag": "authorization",
        "description": "An OAuth2 error",
        "properties": {
          "error": {
            "type": "string",
            "example": "invalid_client",
            "description": "The type of the error returned."
          },
          "error_description": {
            "type": "string",
            "example": "The client credentials are invalid",
            "description": "The type of the error returned."
          }
        }
      },
      "Owner": {
        "title": "Owner",
        "x-box-resource-id": "owner",
        "description": "The owner of this item",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123456",
            "description": "The ID of user that owns this item."
          }
        }
      },
      "Pagination": {
        "title": "Pagination",
        "x-box-resource-id": "pagination",
        "description": "The part of an API response that describes pagination",
        "properties": {
          "total_count": {
            "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.",
            "example": 5000,
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
            "example": 1000,
            "type": "integer",
            "format": "int64"
          },
          "offset": {
            "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.",
            "example": 2000,
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "description": "The order by which items are returned",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginationOrder"
            }
          }
        }
      },
      "PaginationOrder": {
        "title": "Pagination Order",
        "x-box-resource-id": "pagination_order",
        "description": "The order in which a pagination is ordered",
        "properties": {
          "by": {
            "description": "The field to order by",
            "example": "type",
            "type": "string"
          },
          "direction": {
            "type": "string",
            "description": "The direction to order by, either ascending or descending",
            "example": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "Parent": {
        "title": "Parent",
        "x-box-resource-id": "parent",
        "description": "The parent for this item",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of parent item",
            "example": "123"
          }
        }
      },
      "PathCollection": {
        "title": "Path Collection",
        "x-box-resource-id": "path_collection",
        "x-box-sanitized": true,
        "description": "A list of parent folders for an item.",
        "properties": {
          "total_count": {
            "description": "The number of folders in this list.",
            "example": 1,
            "type": "integer",
            "format": "int64",
            "nullable": false
          },
          "entries": {
            "type": "array",
            "description": "The parent folders for this item",
            "nullable": false,
            "items": {
              "$ref": "#/components/schemas/Folder--Mini"
            }
          }
        }
      },
      "Permissions": {
        "title": "Permissions",
        "x-box-resource-id": "permissions",
        "description": "The permissions that the authenticated user has for an item.",
        "properties": {
          "can_delete": {
            "type": "boolean",
            "description": "Specifies if the user can delete this item",
            "example": true,
            "nullable": false
          },
          "can_download": {
            "type": "boolean",
            "description": "Specifies if the user can download this item",
            "example": true,
            "nullable": false
          },
          "can_invite_collaborator": {
            "type": "boolean",
            "description": "Specifies if the user can invite collaborators to the item",
            "example": true,
            "nullable": false
          },
          "can_rename": {
            "type": "boolean",
            "description": "Specifies if the user can rename this item",
            "example": true,
            "nullable": false
          },
          "can_set_share_access": {
            "type": "boolean",
            "description": "Specifies if the user can manage shared links for\nthis item",
            "example": true,
            "nullable": false
          },
          "can_share": {
            "type": "boolean",
            "description": "Specifies if the user can invite new collaborators to this item",
            "example": true,
            "nullable": false
          }
        }
      },
      "Permissions--Writable": {
        "title": "Permissions (Writable)",
        "x-box-resource-id": "permissions--writable",
        "description": "An object defining if a file can be downloaded.",
        "type": "object",
        "properties": {
          "can_download": {
            "description": "Describes who is allowed to download this file",
            "type": "string",
            "example": "open",
            "enum": [
              "open",
              "company"
            ]
          }
        }
      },
      "RealtimeServer": {
        "title": "Realtime Server",
        "x-box-resource-id": "realtime_server",
        "description": "A real-time server that can be used for\nlong polling user events",
        "properties": {
          "type": {
            "description": "`realtime_server`",
            "type": "string",
            "example": "realtime_server"
          },
          "url": {
            "type": "string",
            "example": "http://2.realtime.services.box.net/\\\nsubscribe\\?channel=cc807c9c4869ffb1c81a&stream_type=all",
            "description": "The URL for the server."
          },
          "ttl": {
            "description": "he time in minutes for which this server is available",
            "type": "integer",
            "example": 10
          },
          "max_retries": {
            "description": "The maximum number of retries this server will\nallow before a new long poll should be started by\ngetting a [new list of server](#options-events).",
            "type": "integer",
            "example": 10
          },
          "retry_timeout": {
            "description": "The maximum number of seconds without a response\nafter which you should retry the long poll connection.\n\nThis helps to overcome network issues where the long\npoll looks to be working but no packages are coming\nthrough.",
            "type": "integer",
            "example": 610
          }
        }
      },
      "RealtimeServers": {
        "title": "Realtime Servers",
        "x-box-resource-id": "realtime_servers",
        "description": "A list of real-time servers that can\nbe used for long-polling.",
        "x-box-tag": "events",
        "properties": {
          "chunk_size": {
            "description": "The number of pages of servers remaining.",
            "example": 1,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealtimeServer"
            }
          }
        }
      },
      "RecentItem": {
        "title": "Recent Item",
        "x-box-resource-id": "recent_item",
        "description": "A recent item accessed by a user.",
        "x-box-tag": "recent_items",
        "properties": {
          "type": {
            "type": "string",
            "description": "`recent_item`",
            "example": "recent_item"
          },
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Item"
              },
              {
                "description": "The item that was recently accessed."
              }
            ]
          },
          "interaction_type": {
            "type": "string",
            "example": "item_preview",
            "description": "The most recent type of access the user performed on\nthe item.",
            "enum": [
              "item_preview",
              "item_upload",
              "item_comment",
              "item_open",
              "item_modify"
            ]
          },
          "interacted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time of the most recent interaction.",
            "example": "2018-04-13T13:53:23-07:00"
          },
          "interaction_shared_link": {
            "type": "string",
            "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
            "description": "If the item was accessed through a shared link it will appear here,\notherwise this will be null."
          }
        }
      },
      "RecentItems": {
        "title": "Recent Items",
        "x-box-resource-id": "recent_items",
        "description": "A list of recent items.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RecentItem"
                }
              }
            }
          }
        ]
      },
      "Reference": {
        "title": "Reference",
        "x-box-resource-id": "reference",
        "x-box-sanitized": true,
        "description": "The bare basic reference for an object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this object",
            "example": "11446498"
          }
        }
      },
      "RetentionPolicy": {
        "title": "Retention Policy",
        "x-box-resource-id": "retention_policy",
        "x-box-tag": "retention_policies",
        "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RetentionPolicy--Mini"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "policy_type": {
                "type": "string",
                "example": "finite",
                "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown.",
                "enum": [
                  "finite",
                  "indefinite"
                ]
              },
              "retention_length": {
                "type": "string",
                "format": "int32",
                "example": "0",
                "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
              },
              "disposition_action": {
                "type": "string",
                "example": "permanently_delete",
                "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy time period has passed.",
                "enum": [
                  "permanently_delete",
                  "remove_retention"
                ]
              },
              "status": {
                "type": "string",
                "example": "active",
                "description": "The status of the retention policy. The status of\na policy will be `active`, unless explicitly retired by an\nadministrator, in which case the status will be `retired`.\nOnce a policy has been retired, it cannot become\nactive again.",
                "enum": [
                  "active",
                  "retired"
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "A mini user object representing the user that\ncreated the retention policy"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention policy object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention policy object was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "RetentionPolicies": {
        "title": "Retention Policies",
        "x-box-resource-id": "retention_policies",
        "x-box-tag": "retention_policies",
        "description": "A list of retention policies",
        "properties": {
          "total_count": {
            "description": "The number of retention policies.",
            "example": 156,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetentionPolicy"
            }
          }
        }
      },
      "RetentionPolicy--Mini": {
        "title": "Retention Policy (Mini)",
        "x-box-resource-id": "retention_policy--mini",
        "description": "Mini representation of the retention policy",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`retention_policy`",
                "example": "retention_policy",
                "enum": [
                  "retention_policy"
                ]
              },
              "policy_name": {
                "type": "string",
                "description": "The name given to the retention policy",
                "example": "Some Policy Name"
              }
            }
          }
        ]
      },
      "RetentionPolicyAssignment": {
        "title": "Retention Policy Assignment",
        "x-box-resource-id": "retention_policy_assignment",
        "x-box-tag": "retention_policy_assignments",
        "description": "The retention policy assignment endpoint provides a way\nfor admins to apply a retention policy on a per-folder\nbasis, or place a blanket policy over the entire\nenterprise.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`retention_policy_assignment`",
                "example": "retention_policy_assignment",
                "enum": [
                  "retention_policy_assignment"
                ]
              },
              "retention_policy": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetentionPolicy--Mini"
                  },
                  {
                    "description": "A mini retention policy object representing the\nretention policy that has been assigned to this content"
                  }
                ]
              },
              "assigned_to": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Reference"
                  },
                  {
                    "description": "The `type` and `id` of the content that is under\nretention. The `type` can either be `folder` or `\nenterprise`."
                  }
                ]
              },
              "assigned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "A mini user object representing the user that\ncreated the retention policy assignment object"
                  }
                ]
              },
              "assigned_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the retention policy assignment object was\ncreated",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "RetentionPolicyAssignments": {
        "title": "Retention Policy Assignments",
        "x-box-resource-id": "retention_policy_assignments",
        "x-box-tag": "retention_policy_assignments",
        "description": "A list of retention policy assignments",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RetentionPolicyAssignment"
                }
              }
            }
          }
        ]
      },
      "SessionEndpoints": {
        "title": "Session Endpoints",
        "x-box-resource-id": "session_endpoints",
        "x-box-tag": "chunked_uploads",
        "description": "A list of endpoints for a chunked upload session.",
        "properties": {
          "upload_part": {
            "type": "string",
            "description": "The URL to upload parts to",
            "example": "https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A"
          },
          "commit": {
            "type": "string",
            "description": "The URL used to commit the file",
            "example": "https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/commit"
          },
          "abort": {
            "type": "string",
            "description": "The URL for used to abort the session.",
            "example": "https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A"
          },
          "list_parts": {
            "type": "string",
            "description": "The URL users to list all parts.",
            "example": "https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/parts"
          },
          "status": {
            "type": "string",
            "description": "The URL used to get the status of the upload.",
            "example": "https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A"
          },
          "log_event": {
            "type": "string",
            "description": "The URL used to get the upload log from.",
            "example": "https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/log"
          }
        }
      },
      "SharedLink": {
        "title": "Shared Link",
        "x-box-resource-id": "shared_link",
        "x-box-sanitized": true,
        "description": "Shared links provide direct, read-only access to files or folder on Box.\n\nShared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriately authenticated Box users.",
        "properties": {
          "url": {
            "type": "string",
            "format": "url",
            "description": "The URL that can be used to access the item on Box.\n\nThis URL will display the item in Box's preview UI where the file\ncan be downloaded if allowed.\n\nThis URL will continue to work even when a custom `vanity_url`\nhas been set for this shared link.",
            "example": "https://www.box.com/s/vspke7y05sb214wjokpk",
            "nullable": false
          },
          "download_url": {
            "type": "string",
            "format": "url",
            "description": "A URL that can be used to download the file. This URL can be used in\na browser to download the file. This URL includes the file\nextension so that the file will be saved with the right file type.\n\nThis property will be `null` for folders.",
            "example": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
            "nullable": true
          },
          "vanity_url": {
            "type": "string",
            "format": "url",
            "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application.",
            "example": "https://acme.app.box.com/v/my_url/",
            "nullable": true
          },
          "access": {
            "type": "string",
            "description": "The access level for this shared link.\n\n* `open` - provides access to this item to anyone with this link\n* `company` - only provides access to this item to people the same company\n* `collaborators` - only provides access to this item to people who are\n   collaborators on this item\n\nIf this field is omitted when creating the shared link, the access level\nwill be set to the default access level specified by the enterprise admin.",
            "enum": [
              "open",
              "company",
              "collaborators"
            ],
            "example": "open",
            "nullable": false
          },
          "effective_access": {
            "type": "string",
            "description": "The effective access level for the shared link. This can be a more\nrestrictive access level than the value in the `access` field when the\nenterprise settings restrict the allowed access levels.",
            "enum": [
              "open",
              "company",
              "collaborators"
            ],
            "example": "company",
            "nullable": false
          },
          "effective_permission": {
            "type": "string",
            "description": "The effective permissions for this shared link.",
            "enum": [
              "can_download",
              "can_preview"
            ],
            "example": "can_download",
            "nullable": false
          },
          "unshared_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when this link will be disabled. This field can only be\nset by users with paid accounts.",
            "example": "2018-04-13T13:53:23-07:00",
            "nullable": true
          },
          "is_password_enabled": {
            "type": "boolean",
            "description": "Defines if the shared link requires a password to access the item.",
            "example": true,
            "nullable": false
          },
          "permissions": {
            "type": "object",
            "description": "Defines if this link allows a user to preview and download an item.",
            "properties": {
              "can_download": {
                "type": "boolean",
                "example": true,
                "nullable": false,
                "description": "Defines if the shared link allows for the item to be downloaded. For\nshared links on folders, this also applies to any items in the folder.\n\nThis value can be set to `true` when the effective access level is\nset to `open` or `company`, not `collaborators`."
              },
              "can_preview": {
                "type": "boolean",
                "example": true,
                "nullable": false,
                "description": "Defines if the shared link allows for the item to be previewed.\n\nThis value is always `true`. For shared links on folders this also\napplies to any items in the folder."
              }
            }
          },
          "download_count": {
            "type": "integer",
            "example": 3,
            "description": "The number of times this item has been downloaded.",
            "nullable": false
          },
          "preview_count": {
            "type": "integer",
            "example": 3,
            "description": "The number of times this item has been previewed.",
            "nullable": false
          }
        }
      },
      "SharedLink--Writable": {
        "title": "Shared Link (Writable)",
        "x-box-resource-id": "shared_link--writable",
        "type": "object",
        "description": "The writable attributes for a Shared Link.",
        "x-box-reference-hide": true,
        "properties": {
          "access": {
            "type": "string",
            "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nThis field defaults to default access level\nspecified by the enterprise admin.",
            "enum": [
              "open",
              "company",
              "collaborators"
            ],
            "example": "open"
          },
          "password": {
            "type": "string",
            "description": "The password required to access the shared link. Set this to\n`null` to remove the password.",
            "example": "do-not-use-this-password"
          },
          "unshared_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-12-12T10:53:43-08:00",
            "description": "The timestamp at which this shared link will\nbe disabled. This field can only be set by\nusers with paid accounts."
          },
          "permissions": {
            "type": "object",
            "properties": {
              "can_download": {
                "type": "boolean",
                "example": true,
                "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`."
              }
            }
          }
        }
      },
      "Skill": {
        "title": "Skill",
        "x-box-resource-id": "skill",
        "description": "An object representing a skill",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`skill`",
                "example": "skill",
                "enum": [
                  "skill"
                ]
              },
              "name": {
                "type": "string",
                "description": "The name of the skill",
                "example": "Hello World Skill"
              },
              "api_key": {
                "type": "string",
                "description": "The client ID of the application",
                "example": "hxel2s12wd2h9r8ne103c4gjbqefofih"
              }
            }
          }
        ]
      },
      "SkillInvocation": {
        "title": "Skill Invocation",
        "x-box-resource-id": "skill_invocation",
        "description": "The payload of a Box skill as sent to a Custom Skill's\n`invocation_url`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`skill_invocation`",
                "example": "skill_invocation",
                "enum": [
                  "skill_invocation"
                ]
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the invocation request.",
                "example": "fd1d2e53-35f5-41fb-9c25-4ba326daf2f9_341016304"
              },
              "skill": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Skill"
                  },
                  {
                    "description": "The skill that triggered this invocation"
                  }
                ]
              },
              "token": {
                "type": "object",
                "description": "The read-only and read-write access tokens for this item",
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/AccessToken--Mini"
                  },
                  "write": {
                    "$ref": "#/components/schemas/AccessToken--Mini"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "string",
                    "example": "invoked",
                    "description": "The state of this event.\n\n* `invoked` - Triggered the skill with event details to start\n  applying skill on the file.\n* `processing` - Currently processing.\n* `success` - Completed processing with a success.\n* `transient_failure` - Encountered a failure which can be\n  retried.\n* `permanent_failure` -  Encountered a permanent failure and\n  retry would not help.",
                    "enum": [
                      "invoked",
                      "processing",
                      "success",
                      "transient_failure",
                      "permanent_failure"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "example": "Example",
                    "description": "Status information"
                  },
                  "error_code": {
                    "type": "string",
                    "example": "400",
                    "description": "Error code information, if error occurred."
                  },
                  "additional_info": {
                    "type": "string",
                    "example": "Example",
                    "description": "Additional status information."
                  }
                }
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time this invocation was created.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trigger": {
                "type": "string",
                "example": "FILE_CONTENT",
                "description": "Action that triggered the invocation"
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise that this invocation was triggered for"
                  }
                ]
              },
              "source": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/File--Standard"
                      },
                      {
                        "$ref": "#/components/schemas/Folder--Standard"
                      }
                    ]
                  },
                  {
                    "description": "The item that caused the invocation to trigger"
                  }
                ]
              },
              "event": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Event"
                  },
                  {
                    "description": "The event that triggered this invocation"
                  }
                ]
              }
            }
          }
        ]
      },
      "StoragePolicy": {
        "title": "Storage Policy",
        "x-box-resource-id": "storage_policy",
        "x-box-tag": "storage_policies",
        "description": "The Storage Policy object describes the storage zone.",
        "allOf": [
          {
            "$ref": "#/components/schemas/StoragePolicy--Mini"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "name": {
                "description": "A descriptive name of the region",
                "type": "string",
                "example": "Montreal / Dublin"
              }
            }
          }
        ]
      },
      "StoragePolicies": {
        "title": "Storage Policies",
        "x-box-resource-id": "storage_policies",
        "x-box-tag": "storage_policies",
        "description": "A list of storage policies.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoragePolicy"
                }
              }
            }
          }
        ]
      },
      "StoragePolicy--Mini": {
        "title": "Storage Policy (Mini)",
        "x-box-resource-id": "storage_policy--mini",
        "description": "A mini description of a Storage Policy object",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`storage_policy`",
                "example": "storage_policy",
                "enum": [
                  "storage_policy"
                ]
              }
            }
          }
        ]
      },
      "StoragePolicyAssignment": {
        "title": "Storage Policy Assignment",
        "x-box-resource-id": "storage_policy_assignment",
        "x-box-tag": "storage_policy_assignments",
        "description": "The assignment of a storage policy to a user or enterprise",
        "properties": {
          "storage_policy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StoragePolicy--Mini"
              },
              {
                "description": "The assigned storage policy"
              }
            ]
          },
          "assigned_to": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Reference"
              },
              {
                "description": "The enterprise or use the policy is assigned to"
              }
            ]
          }
        }
      },
      "StoragePolicyAssignments": {
        "title": "Storage Policy Assignments",
        "x-box-resource-id": "storage_policy_assignments",
        "x-box-tag": "storage_policy_assignments",
        "description": "A list of storage policy assignments.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoragePolicyAssignment"
                }
              }
            }
          }
        ]
      },
      "Task": {
        "title": "Task",
        "x-box-resource-id": "task",
        "x-box-tag": "tasks",
        "description": "Tasks allow for file-centric workflows in Box. Users can\ncreate tasks on files and assign them to collaborators on\nBox.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`task`",
                "example": "task",
                "enum": [
                  "task"
                ]
              },
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file associated with the task"
                  }
                ]
              },
              "due_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the task is due",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "action": {
                "type": "string",
                "example": "review",
                "description": "The action the task assignee will be prompted to\ndo.",
                "enum": [
                  "review"
                ]
              },
              "message": {
                "type": "string",
                "description": "A message that will be included with the task",
                "example": "Legal review"
              },
              "task_assignment_collection": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskAssignments"
                  },
                  {
                    "description": "A collection of task assignment objects\nassociated with the task"
                  }
                ]
              },
              "is_completed": {
                "type": "boolean",
                "description": "Whether the task has been completed",
                "example": true
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the task"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the task object was created",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "Tasks": {
        "title": "Tasks",
        "x-box-resource-id": "tasks",
        "x-box-tag": "tasks",
        "description": "A list of tasks",
        "properties": {
          "total_count": {
            "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.",
            "example": 5000,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "TaskAssignment": {
        "title": "Task Assignment",
        "x-box-resource-id": "task_assignment",
        "x-box-tag": "task_assignments",
        "description": "An assignment of a task to a file and user",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`task_assignment`",
                "example": "task_assignment",
                "enum": [
                  "task_assignment"
                ]
              },
              "item": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/File--Mini"
                  },
                  {
                    "description": "The file the task has been assigned to"
                  }
                ]
              },
              "assigned_to": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user the task has been assigned to"
                  }
                ]
              },
              "message": {
                "type": "string",
                "example": "Please review",
                "description": "A message that will be included with this task\nassignment"
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date at which this task assignment was\ncompleted",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "assigned_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date at which this task assignment was\nassigned",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "reminded_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date at which this task assignment was\nreminded",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "resolution_state": {
                "type": "string",
                "description": "State of this assignment",
                "example": "incomplete",
                "enum": [
                  "completed",
                  "incomplete",
                  "approved",
                  "rejected"
                ]
              },
              "assigned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who assigned this task"
                  }
                ]
              }
            }
          }
        ]
      },
      "TaskAssignments": {
        "title": "Task Assignments",
        "x-box-resource-id": "task_assignments",
        "x-box-tag": "task_assignments",
        "type": "object",
        "description": "A list of task assignments",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskAssignment"
                }
              }
            }
          }
        ]
      },
      "TermsOfService": {
        "title": "Terms Of Service",
        "x-box-resource-id": "terms_of_service",
        "x-box-tag": "terms_of_services",
        "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
        "allOf": [
          {
            "$ref": "#/components/schemas/TermsOfService--Mini"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "status": {
                "description": "Whether these terms are enabled or not",
                "type": "string",
                "example": "enabled",
                "enum": [
                  "enabled",
                  "disabled"
                ]
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "The enterprise these terms apply to"
                  }
                ]
              },
              "tos_type": {
                "description": "Whether to apply these terms to managed users or external users",
                "type": "string",
                "example": "managed",
                "enum": [
                  "managed",
                  "external"
                ]
              },
              "text": {
                "description": "The text for your terms and conditions. This text could be\nempty if the status is disabled",
                "type": "string",
                "example": "By using this service, you agree to ..."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "TermsOfServices": {
        "title": "Terms Of Services",
        "x-box-resource-id": "terms_of_services",
        "x-box-tag": "terms_of_services",
        "description": "A list of terms of services",
        "properties": {
          "total_count": {
            "description": "The total number of objects.",
            "example": 2,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsOfService"
            }
          }
        }
      },
      "TermsOfService--Mini": {
        "title": "Terms Of Service (Mini)",
        "x-box-resource-id": "terms_of_service--mini",
        "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`terms_of_service`",
                "example": "terms_of_service",
                "enum": [
                  "terms_of_service"
                ]
              }
            }
          }
        ]
      },
      "TermsOfServiceUserStatus": {
        "title": "ToS User Status",
        "x-box-resource-id": "terms_of_service_user_status",
        "x-box-tag": "terms_of_service_user_statuses",
        "description": "The association between a Terms of Service and a user",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`terms_of_service_user_status`",
                "example": "terms_of_service_user_status",
                "enum": [
                  "terms_of_service_user_status"
                ]
              },
              "tos": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TermsOfService--Mini"
                  },
                  {
                    "description": "The terms of service"
                  }
                ]
              },
              "user": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user"
                  }
                ]
              },
              "is_accepted": {
                "type": "boolean",
                "example": true,
                "description": "If the user has accepted the terms of services"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the legal item was modified.",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        ]
      },
      "TermsOfServiceUserStatuses": {
        "title": "ToS User Statuses",
        "x-box-resource-id": "terms_of_services_user_statuses",
        "x-box-tag": "terms_of_service_user_statuses",
        "description": "A list of terms of service user statuses",
        "properties": {
          "total_count": {
            "description": "The total number of objects.",
            "example": 2,
            "type": "integer",
            "format": "int64"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermsOfServiceUserStatus"
            }
          }
        }
      },
      "TokenRequest": {
        "title": "Token Request",
        "x-box-resource-id": "token_request",
        "description": "A request for a new OAuth2 token",
        "required": [
          "grant_type"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "format": "urn",
            "example": "authorization_code",
            "description": "The type of request being made, either using a client-side obtained\nauthorization code, a refresh token, a JWT assertion, or another access\ntoken for the purpose of downscoping a token.",
            "enum": [
              "authorization_code",
              "refresh_token",
              "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "urn:ietf:params:oauth:grant-type:token-exchange"
            ]
          },
          "client_id": {
            "type": "string",
            "description": "The Client ID of the application requesting an access token.\n\nUsed in combination with `authorization_code` or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
            "example": "ly1nj6n11vionaie65emwzk575hnnmrk"
          },
          "client_secret": {
            "type": "string",
            "description": "The client secret of the application requesting an access token.\n\nUsed in combination with `authorization_code` or\n`urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.",
            "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
          },
          "code": {
            "type": "string",
            "format": "token",
            "description": "The client-side authorization code passed to your application by\nBox in the browser redirect after the user has successfully\ngranted your application permission to make API calls on their\nbehalf.\n\nUsed in combination with `authorization_code` as the `grant_type`.",
            "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
          },
          "refresh_token": {
            "type": "string",
            "format": "token",
            "description": "A refresh token used to get a new access token with.\n\nUsed in combination with `refresh_token` as the `grant_type`.",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
          },
          "assertion": {
            "type": "string",
            "format": "jwt",
            "description": "A JWT assertion for which to request a new access token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\nas the `grant_type`.",
            "example": "xxxxx.yyyyy.zzzzz"
          },
          "subject_token": {
            "type": "string",
            "format": "token",
            "description": "The token to exchange for a downscoped token. This can be a regular\naccess token, a JWT assertion, or an app token.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
          },
          "subject_token_type": {
            "type": "string",
            "example": "urn:ietf:params:oauth:token-type:access_token",
            "description": "The type of `subject_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "enum": [
              "urn:ietf:params:oauth:token-type:access_token"
            ]
          },
          "actor_token": {
            "type": "string",
            "format": "token",
            "description": "The actor token used to create an annotator token.\nThis is a JWT assertion.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "example": "c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ"
          },
          "actor_token_type": {
            "type": "string",
            "format": "urn",
            "example": "urn:ietf:params:oauth:token-type:id_token",
            "description": "The type of `actor_token` passed in.\n\nUsed in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\nas the `grant_type`.",
            "enum": [
              "urn:ietf:params:oauth:token-type:id_token"
            ]
          },
          "scope": {
            "type": "string",
            "format": "space_delimited_list",
            "description": "The space-delimited list of scopes that you want apply to the\nnew access token.\n\nThe `subject_token` will need to have all of these scopes or\nthe call will error with **401 Unauthorized**.",
            "example": "item_upload item_preview base_explorer"
          },
          "resource": {
            "type": "string",
            "format": "url",
            "description": "Full URL for the file that the token should be generated for.",
            "example": "https://api.box.com/2.0/files/123456"
          }
        }
      },
      "TokenRevocationRequest": {
        "title": "Token Revocation Request",
        "x-box-resource-id": "token_revocation_request",
        "description": "A request to revoke an OAuth2 token",
        "required": [
          "grant_type"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "description": "The Client ID of the application requesting to revoke the\naccess token.",
            "example": "ly1nj6n11vionaie65emwzk575hnnmrk"
          },
          "client_secret": {
            "type": "string",
            "description": "The client secret of the application requesting to revoke\nan access token.",
            "example": "hOzsTeFlT6ko0dme22uGbQal04SBPYc1"
          },
          "token": {
            "type": "string",
            "format": "token",
            "description": "The access token to revoke.",
            "example": "n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW"
          }
        }
      },
      "TrackingCode": {
        "title": "Tracking Code",
        "x-box-resource-id": "tracking_code",
        "description": "Custom tracking code for a user.",
        "properties": {
          "type": {
            "type": "string",
            "description": "`tracking_code`",
            "example": "tracking_code",
            "enum": [
              "tracking_code"
            ]
          },
          "name": {
            "type": "string",
            "description": "The name of the tracking code, which must be preconfigured in\nthe Admin Console",
            "example": "department"
          },
          "value": {
            "type": "string",
            "description": "The value of the tracking code",
            "example": "Sales"
          }
        }
      },
      "UploadPart": {
        "title": "Upload Part",
        "x-box-resource-id": "upload_part",
        "description": "A chunk of a file uploaded as part of\nan upload session.",
        "x-box-tag": "chunked_uploads",
        "allOf": [
          {
            "$ref": "#/components/schemas/UploadPart--Mini"
          },
          {
            "properties": {
              "sha1": {
                "description": "The SHA1 hash of the chunk.",
                "type": "string",
                "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc"
              }
            }
          }
        ]
      },
      "UploadPart--Mini": {
        "title": "Upload Part (Mini)",
        "x-box-resource-id": "upload_part--mini",
        "description": "The basic representation of an upload\nsession chunk.",
        "properties": {
          "part_id": {
            "description": "The unique ID of the chunk.",
            "type": "string",
            "example": "6F2D3486"
          },
          "offset": {
            "description": "The offset of the chunk within the file\nin bytes. The lower bound of the position\nof the chunk within the file.",
            "type": "integer",
            "format": "int64",
            "example": 16777216
          },
          "size": {
            "description": "The size of the chunk in bytes.",
            "type": "integer",
            "format": "int64",
            "example": 3222784
          }
        }
      },
      "UploadParts": {
        "title": "Upload Parts",
        "x-box-resource-id": "upload_parts",
        "description": "A list of uploaded chunks for an upload\nsession.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadPart"
                }
              }
            }
          }
        ]
      },
      "UploadSession": {
        "title": "Upload Session",
        "x-box-resource-id": "upload_session",
        "description": "An upload session for chunk uploading a file.",
        "x-box-tag": "chunked_uploads",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`upload_session`",
                "example": "upload_session",
                "enum": [
                  "upload_session"
                ]
              },
              "session_expires_at": {
                "description": "The date and time when this session expires.",
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "part_size": {
                "type": "integer",
                "format": "int64",
                "example": 1024,
                "description": "The  size in bytes that must be used for all parts of of the\nupload.\n\nOnly the last part is allowed to be of a smaller size."
              },
              "total_parts": {
                "type": "integer",
                "format": "int32",
                "example": 1000,
                "description": "The total number of parts expected in this upload session,\nas determined by the file size and part size."
              },
              "num_parts_processed": {
                "type": "integer",
                "format": "int32",
                "example": 455,
                "description": "The number of parts that have been uploaded and processed\nby the server. This starts at `0`.\n\nWhen committing a file files, inspecting this property can\nprovide insight if all parts have been uploaded correctly."
              },
              "session_endpoints": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SessionEndpoints"
                  },
                  {
                    "description": "A list of endpoints for this session."
                  }
                ]
              }
            }
          }
        ]
      },
      "UploadUrl": {
        "title": "Upload Url",
        "x-box-resource-id": "upload_url",
        "x-box-tag": "uploads",
        "description": "The details for the upload session for the file.",
        "properties": {
          "upload_url": {
            "type": "string",
            "example": "https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234",
            "description": "A URL for an upload session that can be used to upload\nthe file."
          },
          "upload_token": {
            "type": "string",
            "example": "Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP",
            "description": "An optional access token to use to upload the file"
          }
        }
      },
      "User": {
        "title": "User",
        "x-box-resource-id": "user",
        "x-box-has-field-variants": true,
        "description": "A full representation of a user, as can be returned from any\nuser API endpoint.",
        "x-box-tag": "users",
        "allOf": [
          {
            "$ref": "#/components/schemas/User--Standard"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "role": {
                "x-box-field-variant": 2,
                "type": "string",
                "enum": [
                  "admin",
                  "coadmin",
                  "user"
                ],
                "description": "The userâ€™s enterprise role",
                "example": "admin"
              },
              "tracking_codes": {
                "x-box-field-variant": 2,
                "type": "array",
                "description": "An array of key/value pairs set by the userâ€™s admin",
                "items": {
                  "$ref": "#/components/schemas/TrackingCode"
                }
              },
              "can_see_managed_users": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether the user can see other enterprise users in her contact list"
              },
              "is_sync_enabled": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "description": "Whether the user can use Box Sync",
                "example": true
              },
              "is_external_collab_restricted": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether the user is allowed to collaborate with users outside her\nenterprise"
              },
              "is_exempt_from_device_limits": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether to exempt the user from Enterprise device limits"
              },
              "is_exempt_from_login_verification": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether the user must use two-factor authentication"
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Enterprise"
                  },
                  {
                    "description": "Representation of the userâ€™s enterprise"
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ]
              },
              "my_tags": {
                "x-box-field-variant": 2,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "important"
                ],
                "description": "Tags for all files and folders owned by the user. Values returned\nwill only contain tags that were set by the requester."
              },
              "hostname": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "https://example.app.box.com/",
                "description": "The root (protocol, subdomain, domain) of any links that need to be\ngenerated for the user"
              },
              "is_platform_access_only": {
                "x-box-field-variant": 2,
                "type": "boolean",
                "example": true,
                "description": "Whether the user is an App User"
              },
              "external_app_user_id": {
                "x-box-field-variant": 2,
                "type": "string",
                "example": "my-app-user",
                "description": "An external identifier for an app user, which can be used to look up\nthe user."
              }
            }
          }
        ]
      },
      "Users": {
        "title": "Users",
        "x-box-resource-id": "users",
        "x-box-tag": "users",
        "description": "A list of users.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        ]
      },
      "User--Standard": {
        "title": "User (Standard)",
        "x-box-resource-id": "user--standard",
        "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/User--Mini"
          },
          {
            "properties": {
              "created_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When the user object was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "date-time",
                "description": "When the user object was last modified",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "language": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "ISO639-1-BOX",
                "description": "The user's preferred language",
                "example": "en"
              },
              "timezone": {
                "x-box-field-variant": 1,
                "type": "string",
                "format": "timezone",
                "description": "The user's timezone",
                "example": "Africa/Bujumbura"
              },
              "space_amount": {
                "x-box-field-variant": 1,
                "type": "integer",
                "description": "The userâ€™s total available space amount in bytes",
                "example": 11345156112
              },
              "space_used": {
                "x-box-field-variant": 1,
                "type": "integer",
                "description": "The amount of space in use by the user",
                "example": 1237009912
              },
              "max_upload_size": {
                "x-box-field-variant": 1,
                "type": "integer",
                "description": "The maximum individual file size in bytes the user can have",
                "example": 2147483648
              },
              "status": {
                "x-box-field-variant": 1,
                "type": "string",
                "enum": [
                  "active",
                  "inactive",
                  "cannot_delete_edit",
                  "cannot_delete_edit_upload"
                ],
                "description": "The user's account status",
                "example": "active"
              },
              "job_title": {
                "x-box-field-variant": 1,
                "type": "string",
                "description": "The userâ€™s job title",
                "maxLength": 100,
                "example": "CEO"
              },
              "phone": {
                "x-box-field-variant": 1,
                "type": "string",
                "description": "The userâ€™s phone number",
                "maxLength": 100,
                "example": "6509241374"
              },
              "address": {
                "x-box-field-variant": 1,
                "type": "string",
                "description": "The userâ€™s address",
                "maxLength": 255,
                "example": "900 Jefferson Ave, Redwood City, CA 94063"
              },
              "avatar_url": {
                "x-box-field-variant": 1,
                "type": "string",
                "description": "URL of the userâ€™s avatar image",
                "example": "https://www.box.com/api/avatar/large/181216415"
              }
            }
          }
        ]
      },
      "User--Mini": {
        "title": "User (Mini)",
        "x-box-resource-id": "user--mini",
        "description": "A mini representation of a user, used when\nnested within another resource.",
        "x-box-reference-hide": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`user`",
                "example": "user",
                "nullable": false,
                "enum": [
                  "user"
                ]
              },
              "name": {
                "type": "string",
                "description": "The display name of this user",
                "example": "Aaron Levie",
                "maxLength": 50,
                "nullable": false
              },
              "login": {
                "type": "string",
                "format": "email",
                "description": "The primary email address of this user",
                "example": "ceo@example.com",
                "nullable": false
              }
            }
          }
        ]
      },
      "Watermark": {
        "title": "Watermark",
        "x-box-resource-id": "watermark",
        "x-box-tag": "file_watermarks",
        "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
        "properties": {
          "watermark": {
            "type": "object",
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this watermark was created",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this task was modified",
                "example": "2012-12-12T10:53:43-08:00"
              }
            }
          }
        }
      },
      "WatermarkInfo": {
        "title": "Watermark Info",
        "x-box-resource-id": "watermark_info",
        "description": "Details about the watermark applied to this item",
        "properties": {
          "is_watermarked": {
            "type": "boolean",
            "description": "Specifies of this item has a watermark applied.",
            "example": true,
            "nullable": false
          }
        }
      },
      "Webhook": {
        "title": "Webhook",
        "x-box-resource-id": "webhook",
        "x-box-tag": "webhooks",
        "description": "Represents a configured webhook.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`webhook`",
                "example": "webhook",
                "enum": [
                  "webhook"
                ]
              },
              "target": {
                "type": "object",
                "description": "The item that will trigger the webhook",
                "properties": {
                  "id": {
                    "description": "The ID of the item to trigger a webhook",
                    "type": "string",
                    "example": "1231232"
                  },
                  "type": {
                    "description": "The type of item to trigger a webhook",
                    "type": "string",
                    "example": "file",
                    "enum": [
                      "file",
                      "folder"
                    ]
                  }
                }
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created the webhook"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "A timestamp identifying the time that\nthe webhook was created.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "address": {
                "type": "string",
                "example": "https://example.com/webhooks",
                "description": "The URL that is notified by this webhook"
              },
              "triggers": {
                "type": "array",
                "example": [
                  "FILE.UPLOADED"
                ],
                "description": "An array of event names that this webhook is\nto be triggered for",
                "items": {
                  "title": "Webhook Trigger",
                  "example": "FILE.UPLOADED",
                  "type": "string",
                  "description": "The event name that triggered this webhook",
                  "enum": [
                    "FILE.UPLOADED",
                    "FILE.PREVIEWED",
                    "FILE.DOWNLOADED",
                    "FILE.TRASHED",
                    "FILE.DELETED",
                    "FILE.RESTORED",
                    "FILE.COPIED",
                    "FILE.MOVED",
                    "FILE.LOCKED",
                    "FILE.UNLOCKED",
                    "FILE.RENAMED",
                    "COMMENT.CREATED",
                    "COMMENT.UPDATED",
                    "COMMENT.DELETED",
                    "TASK_ASSIGNMENT.CREATED",
                    "TASK_ASSIGNMENT.UPDATED",
                    "METADATA_INSTANCE.CREATED",
                    "METADATA_INSTANCE.UPDATED",
                    "METADATA_INSTANCE.DELETED",
                    "FOLDER.CREATED",
                    "FOLDER.RENAMED",
                    "FOLDER.DOWNLOADED",
                    "FOLDER.RESTORED",
                    "FOLDER.DELETED",
                    "FOLDER.COPIED",
                    "FOLDER.MOVED",
                    "FOLDER.TRASHED",
                    "WEBHOOK.DELETED",
                    "COLLABORATION.CREATED",
                    "COLLABORATION.ACCEPTED",
                    "COLLABORATION.REJECTED",
                    "COLLABORATION.REMOVED",
                    "COLLABORATION.UPDATED",
                    "SHARED_LINK.DELETED",
                    "SHARED_LINK.CREATED",
                    "SHARED_LINK.UPDATED"
                  ]
                }
              }
            }
          }
        ]
      },
      "Webhooks": {
        "title": "Webhooks",
        "x-box-resource-id": "webhooks",
        "x-box-tag": "webhooks",
        "description": "A list of webhooks.",
        "allOf": [
          {
            "$ref": "#/components/schemas/MarkerPagination"
          },
          {
            "properties": {
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          }
        ]
      },
      "WebhookEvent": {
        "title": "Webhook Event",
        "x-box-resource-id": "webhook_event",
        "description": "The event that is sent to a webhook address when an event happens",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reference"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "description": "`webhook_event`",
                "example": "webhook_event",
                "enum": [
                  "webhook_event"
                ]
              },
              "webhook": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  {
                    "description": "The webhook object that triggered this event"
                  }
                ]
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user that triggered this event"
                  }
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "A timestamp identifying the time that\nthe webhook event was triggered.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trigger": {
                "allOf": [
                  {
                    "title": "Webhook Trigger",
                    "example": "FILE.UPLOADED",
                    "type": "string",
                    "description": "The event name that triggered this webhook",
                    "enum": [
                      "FILE.UPLOADED",
                      "FILE.PREVIEWED",
                      "FILE.DOWNLOADED",
                      "FILE.TRASHED",
                      "FILE.DELETED",
                      "FILE.RESTORED",
                      "FILE.COPIED",
                      "FILE.MOVED",
                      "FILE.LOCKED",
                      "FILE.UNLOCKED",
                      "FILE.RENAMED",
                      "COMMENT.CREATED",
                      "COMMENT.UPDATED",
                      "COMMENT.DELETED",
                      "TASK_ASSIGNMENT.CREATED",
                      "TASK_ASSIGNMENT.UPDATED",
                      "METADATA_INSTANCE.CREATED",
                      "METADATA_INSTANCE.UPDATED",
                      "METADATA_INSTANCE.DELETED",
                      "FOLDER.CREATED",
                      "FOLDER.RENAMED",
                      "FOLDER.DOWNLOADED",
                      "FOLDER.RESTORED",
                      "FOLDER.DELETED",
                      "FOLDER.COPIED",
                      "FOLDER.MOVED",
                      "FOLDER.TRASHED",
                      "WEBHOOK.DELETED",
                      "COLLABORATION.CREATED",
                      "COLLABORATION.ACCEPTED",
                      "COLLABORATION.REJECTED",
                      "COLLABORATION.REMOVED",
                      "COLLABORATION.UPDATED",
                      "SHARED_LINK.DELETED",
                      "SHARED_LINK.CREATED",
                      "SHARED_LINK.UPDATED"
                    ]
                  },
                  {
                    "description": "The event name that triggered this webhook"
                  }
                ]
              },
              "source": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/File--Standard"
                      },
                      {
                        "$ref": "#/components/schemas/Folder--Standard"
                      }
                    ]
                  },
                  {
                    "description": "The item that caused the event to trigger"
                  }
                ]
              }
            }
          }
        ]
      },
      "WebLink": {
        "title": "Web Link",
        "x-box-resource-id": "web_link",
        "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
        "x-box-tag": "web_links",
        "x-box-has-field-variants": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/WebLink--Mini"
          },
          {
            "x-box-reference-hide": false
          },
          {
            "properties": {
              "parent": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Folder--Mini"
                  },
                  {
                    "description": "The parent object the web link belongs to"
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ]
              },
              "description": {
                "type": "string",
                "example": "Example page",
                "x-box-field-variant": 2,
                "description": "The description accompanying the web link. This is\nvisible within the Box web application."
              },
              "path_collection": {
                "x-box-field-variant": 2,
                "type": "array",
                "description": "The path of folders to this link, starting at the root",
                "items": {
                  "$ref": "#/components/schemas/Folder--Mini"
                }
              },
              "created_at": {
                "x-box-field-variant": 2,
                "type": "string",
                "format": "date-time",
                "description": "When this file was created on Boxâ€™s servers.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "modified_at": {
                "x-box-field-variant": 2,
                "type": "string",
                "format": "date-time",
                "description": "When this file was last updated on the Box\nservers.",
                "example": "2012-12-12T10:53:43-08:00"
              },
              "trashed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When this file was last moved to the trash.",
                "example": "2012-12-12T10:53:43-08:00",
                "x-box-field-variant": 2
              },
              "purged_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When this file will be permanently deleted.",
                "example": "2012-12-12T10:53:43-08:00",
                "x-box-field-variant": 2
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created this web link"
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ]
              },
              "modified_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last modified this web link"
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ]
              },
              "owned_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who owns this web link"
                  },
                  {
                    "x-box-field-variant": 2
                  }
                ]
              },
              "shared_link": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SharedLink"
                  },
                  {
                    "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                  },
                  {
                    "x-box-field-variant": 2
                  },
                  {
                    "nullable": true
                  }
                ]
              },
              "item_status": {
                "type": "string",
                "example": "active",
                "enum": [
                  "active",
                  "trashed",
                  "deleted"
                ],
                "description": "Whether this item is deleted or not. Values include `active`,\n`trashed` if the file has been moved to the trash, and `deleted` if\nthe file has been permanently deleted",
                "x-box-field-variant": 2
              }
            }
          }
        ]
      },
      "WebLink--Mini": {
        "title": "Web Link (Mini)",
        "x-box-resource-id": "web_link--mini",
        "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
        "x-box-tag": "web_links",
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "properties": {
              "url": {
                "type": "string",
                "example": "https://www.example.com/example/1234",
                "description": "The URL this web link points to"
              },
              "type": {
                "type": "string",
                "description": "`web_link`",
                "example": "web_link",
                "enum": [
                  "web_link"
                ]
              },
              "sequence_id": {
                "type": "string",
                "example": "1",
                "description": "A unique ID for use with the /events endpoint"
              },
              "etag": {
                "type": "string",
                "example": "1",
                "description": "The entity tag of this web link. Used with `If-Match`\nheaders."
              },
              "name": {
                "type": "string",
                "description": "The name of the web link",
                "example": "My Bookmark"
              }
            }
          }
        ]
      }
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "tags": [
    {
      "name": "Basics",
      "x-box-tag": "basics"
    },
    {
      "name": "Downloads & Uploads",
      "x-box-tag": "downloads_and_uploads"
    },
    {
      "name": "Advanced Files & Folders",
      "x-box-tag": "advanced_files_and_folders"
    },
    {
      "name": "Trash",
      "x-box-tag": "trash"
    },
    {
      "name": "Metadata",
      "x-box-tag": "metadata"
    },
    {
      "name": "Automation & Events",
      "x-box-tag": "automation_and_events"
    },
    {
      "name": "Collaborations",
      "x-box-tag": "collaborations"
    },
    {
      "name": "Users & Groups",
      "x-box-tag": "users_and_groups"
    },
    {
      "name": "Governance",
      "x-box-tag": "governance"
    },
    {
      "name": "Security & Compliance",
      "x-box-tag": "security_and_compliance"
    },
    {
      "name": "Multi Zones",
      "x-box-tag": "multizones"
    },
    {
      "name": "Authorization",
      "x-box-tag": "authorization",
      "x-box-reference-parent-category": "basics"
    },
    {
      "name": "Folders",
      "x-box-tag": "folders",
      "x-box-reference-parent-category": "basics",
      "x-box-reference-description": "Folders represent a collection of files, web links,\nand other folders. They are a key building block when\nusing Box Platform.\n\nFolders also contain metadata about itself, including\nwho owns the folder, when it was created, and when it was\nlast modified."
    },
    {
      "name": "Files",
      "x-box-tag": "files",
      "x-box-reference-parent-category": "basics"
    },
    {
      "name": "Downloads",
      "x-box-tag": "downloads",
      "x-box-reference-parent-category": "downloads_and_uploads"
    },
    {
      "name": "Simple Uploads",
      "x-box-tag": "uploads",
      "x-box-reference-parent-category": "downloads_and_uploads"
    },
    {
      "name": "Chunked Uploads",
      "x-box-tag": "chunked_uploads",
      "x-box-reference-parent-category": "downloads_and_uploads"
    },
    {
      "name": "Search",
      "x-box-tag": "search",
      "x-box-reference-parent-category": "advanced_files_and_folders"
    },
    {
      "name": "Shared Links",
      "x-box-tag": "shared_links",
      "x-box-reference-parent-category": "advanced_files_and_folders"
    },
    {
      "name": "File Versions",
      "x-box-tag": "file_versions",
      "x-box-reference-parent-category": "advanced_files_and_folders"
    },
    {
      "name": "Comments",
      "x-box-tag": "comments",
      "x-box-reference-parent-category": "advanced_files_and_folders"
    },
    {
      "name": "Collections",
      "x-box-tag": "collections",
      "x-box-reference-parent-category": "advanced_files_and_folders"
    },
    {
      "name": "Web Links",
      "x-box-tag": "web_links",
      "x-box-reference-parent-category": "advanced_files_and_folders"
    },
    {
      "name": "Trashed Items",
      "x-box-tag": "trashed_items",
      "x-box-reference-parent-category": "trash"
    },
    {
      "name": "Trashed Files",
      "x-box-tag": "trashed_files",
      "x-box-reference-parent-category": "trash"
    },
    {
      "name": "Trashed Folders",
      "x-box-tag": "trashed_folders",
      "x-box-reference-parent-category": "trash"
    },
    {
      "name": "Trashed Web Links",
      "x-box-tag": "trashed_web_links",
      "x-box-reference-parent-category": "trash"
    },
    {
      "name": "File Metadata",
      "x-box-tag": "file_metadata",
      "x-box-reference-parent-category": "metadata"
    },
    {
      "name": "Folder Metadata",
      "x-box-tag": "folder_metadata",
      "x-box-reference-parent-category": "metadata"
    },
    {
      "name": "Metadata Templates",
      "x-box-tag": "metadata_templates",
      "x-box-reference-parent-category": "metadata"
    },
    {
      "name": "Cascade Policies (Beta)",
      "x-box-tag": "metadata_cascade_policies",
      "x-box-reference-parent-category": "metadata"
    },
    {
      "name": "Skills",
      "x-box-tag": "skills",
      "x-box-reference-parent-category": "automation_and_events"
    },
    {
      "name": "Webhooks",
      "x-box-tag": "webhooks",
      "x-box-reference-parent-category": "automation_and_events"
    },
    {
      "name": "Events",
      "x-box-tag": "events",
      "x-box-reference-parent-category": "automation_and_events"
    },
    {
      "name": "Recent Items",
      "x-box-tag": "recent_items",
      "x-box-reference-parent-category": "automation_and_events"
    },
    {
      "name": "Tasks",
      "x-box-tag": "tasks",
      "x-box-reference-parent-category": "automation_and_events"
    },
    {
      "name": "Task Assignments",
      "x-box-tag": "task_assignments",
      "x-box-reference-parent-category": "automation_and_events"
    },
    {
      "name": "User Collaboration",
      "x-box-tag": "user_collaborations",
      "x-box-reference-parent-category": "collaborations"
    },
    {
      "name": "File Collaborations",
      "x-box-tag": "file_collaborations",
      "x-box-reference-parent-category": "collaborations"
    },
    {
      "name": "Folder Collaborations",
      "x-box-tag": "folder_collaborations",
      "x-box-reference-parent-category": "collaborations"
    },
    {
      "name": "Group Collaborations",
      "x-box-tag": "group_collaborations",
      "x-box-reference-parent-category": "collaborations"
    },
    {
      "name": "Whitelist",
      "x-box-tag": "collaboration_whitelist_entries",
      "x-box-reference-parent-category": "collaborations"
    },
    {
      "name": "Whitelist Exemptions",
      "x-box-tag": "collaboration_whitelist_exempt_targets",
      "x-box-reference-parent-category": "collaborations"
    },
    {
      "name": "Users",
      "x-box-tag": "users",
      "x-box-reference-parent-category": "users_and_groups"
    },
    {
      "name": "Groups",
      "x-box-tag": "groups",
      "x-box-reference-parent-category": "users_and_groups"
    },
    {
      "name": "Memberships",
      "x-box-tag": "memberships",
      "x-box-reference-parent-category": "users_and_groups"
    },
    {
      "name": "Avatars",
      "x-box-tag": "avatars",
      "x-box-reference-parent-category": "users_and_groups"
    },
    {
      "name": "Email Aliases",
      "x-box-tag": "email_aliases",
      "x-box-reference-parent-category": "users_and_groups"
    },
    {
      "name": "Invites",
      "x-box-tag": "invites",
      "x-box-reference-parent-category": "users_and_groups"
    },
    {
      "name": "Transfer Folders",
      "x-box-tag": "transfer",
      "x-box-reference-parent-category": "users_and_groups"
    },
    {
      "name": "Legal Hold Policies",
      "x-box-tag": "legal_hold_policies",
      "x-box-reference-parent-category": "governance"
    },
    {
      "name": "Legal Hold Assignments",
      "x-box-tag": "legal_hold_policy_assignments",
      "x-box-reference-parent-category": "governance"
    },
    {
      "name": "File Version Holds",
      "x-box-tag": "file_version_legal_holds",
      "x-box-reference-parent-category": "governance"
    },
    {
      "name": "Retention Policies",
      "x-box-tag": "retention_policies",
      "x-box-reference-parent-category": "governance"
    },
    {
      "name": "Retention Assignments",
      "x-box-tag": "retention_policy_assignments",
      "x-box-reference-parent-category": "governance"
    },
    {
      "name": "File Version Retentions",
      "x-box-tag": "file_version_retentions",
      "x-box-reference-parent-category": "governance"
    },
    {
      "name": "Device Pins",
      "x-box-tag": "device_pins",
      "x-box-reference-parent-category": "security_and_compliance"
    },
    {
      "name": "Terms of Service",
      "x-box-tag": "terms_of_services",
      "x-box-reference-parent-category": "security_and_compliance"
    },
    {
      "name": "Terms Users Statuses",
      "x-box-tag": "terms_of_service_user_statuses",
      "x-box-reference-parent-category": "security_and_compliance"
    },
    {
      "name": "File Watermarks",
      "x-box-tag": "file_watermarks",
      "x-box-reference-parent-category": "security_and_compliance"
    },
    {
      "name": "Folder Watermarks",
      "x-box-tag": "folder_watermarks",
      "x-box-reference-parent-category": "security_and_compliance"
    },
    {
      "name": "Storage Policies",
      "x-box-tag": "storage_policies",
      "x-box-reference-parent-category": "multizones"
    },
    {
      "name": "Storage Policy Assignments",
      "x-box-tag": "storage_policy_assignments",
      "x-box-reference-parent-category": "multizones"
    }
  ]
}